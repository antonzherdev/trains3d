package core

import CNTypes

stub def NSStringFromClass(cls : Class) : string
stub struct Class{}


stub class ODType<T> {
    def cls : Class
    def name : string
    def description = name + ".type"

    def hash : uint = self
    def isEqualTo(other : ODType<T>) = self == other
}

stub class ODClassType<T>(cls : Class) extends ODType<T> {
    def name = NSStringFromClass(cls)
}

stub class ODPType<T>(cls : Class, name : string, size : uint, wrap : (VoidRef, uint) -> T) extends ODType<T>

type ClassType<T> = ODClassType<T>
type PType<T> = ODPType<T>
type Type<T> = ODType<T>