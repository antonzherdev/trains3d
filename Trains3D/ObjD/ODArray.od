stub class CNChain<A> {
    def filter(: A -> bool) : CNChain<A>
    def map<B>(: A -> B) : CNChain<B>

    def mul<B>(: [B]) : CNChain<(A,B)>

    def prepend(: [A]) : CNChain<A>
    def append(: [A]) : CNChain<A>
    def exclude(: [A]) : CNChain<A>
    def intersect(: [A]) : CNChain<A>

    def reverse : CNChain<A>

    def fold<B>( : (B, A) -> B, withStart : B) : B
    def array : [A]
    def count : uint
    def for(each: A -> void)
    def head : A
    def randomItem : A
}

stub class ODArray<A> extends CNChain<A> {

}