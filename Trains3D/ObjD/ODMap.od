stub class ODMap<K, V> {
    def count : uint
    def objectFor(key : K) : V
    def keys : [K]
    def values : [V]
}

stub class ODMutableMap<K, V> extends ODMap<K, V> {
    def set(object : V, forKey : K)
    def removeObjectFor(key : K)
    def objectFor(key: K, orUpdateWith: () -> V) : V
    def modify(with : V? -> V?, forKey : K) : V?
}

stub class NSDictionary <K, V> extends ODMap<K, V> {
    def allKeysFor(object : V) : [K]
}

stub class NSMutableDictionary<K, V> extends ODMutableMap<K, V> {
    def removeAllObjects
}