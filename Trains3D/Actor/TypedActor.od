package com.antonzherdev.actor

class TypedActor {
    def future<T>(f : void -> T) : Future<T> = {
        TypedActorFuture(self, f, prompt = false)
    }

    def prompt<T>(f : void -> T) : Future<T> = {
        TypedActorFuture(self, f, prompt = true)
    }

    val actor : self = Actors.typed(self)
}

class TypedActorFuture<T>(actor : TypedActor, f : void -> T, prompt : bool) extends DefaultPromise<T> with ActorMessage {
    def process {
        success(f())
    }
}