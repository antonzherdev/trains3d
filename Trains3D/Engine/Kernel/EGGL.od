import EGTypes

stub struct GLenum
stub struct GLint
stub struct GLuint

stub def egClear

stub def egColor3(r : float, g : float, b : float)
stub def egColor4(r : float, g : float, b : float, a : float)

stub def glutSolidCube(size :float)

stub def glPushMatrix
stub def glPopMatrix
stub def egRotate(angle : float, x : float, y : float, z : float)
stub def egScale(x : float, y : float, z : float)
stub def egTranslate(x : float, y : float, z : float)

stub def glEnable(: uint)
stub def glDisable(: uint)
stub val GL_DEPTH_TEST : uint
stub val GL_LIGHTING : uint
stub val GL_LIGHT0 : uint
stub val GL_LIGHT1 : uint
stub val GL_COLOR_MATERIAL : uint
stub val GL_NORMALIZE : uint
stub def glShadeModel(: uint)
stub val GL_SMOOTH : uint

stub def glBegin(: uint)
stub def glEnd
stub val GL_QUADS : uint
stub val GL_LINES : uint
stub def egVertex2(x : float, y : float)
stub def egVertex3(x : float, y : float, z : float)
stub def egNormal3(x : float, y : float, z : float)
stub def egTexCoord2(x : float, y : float)

stub def egRect(x1 : float, y1 : float, x2 : float, y2 : float)

stub def egViewport(rect : EGRectI)
stub def glViewport (x : int, y : int, width : int, height : int)
stub def glMatrixMode(: uint)
stub val GL_PROJECTION : uint
stub val GL_MODELVIEW : uint
stub def glLoadIdentity
stub def glOrtho(left : float, right : float, bottom : float, top : float, zNear : float, zFar : float)


stub def egAmbientColor(r : float, g : float, b : float)
stub def egLightColor(light: uint, r : float, g : float, b : float)
stub def egLightPosition(light: uint, r : float, g : float, b : float)
stub def egLightDirection(light: uint, r : float, g : float, b : float)

stub def egMaterialColor(face : uint, tp : uint, color : EGColor)
stub def egMaterial(face : uint, tp : uint, value : float)
stub val GL_BACK : uint
stub val GL_FRONT : uint
stub val GL_FRONT_AND_BACK : uint

stub val GL_AMBIENT : uint
stub val GL_DIFFUSE : uint
stub val GL_SPECULAR : uint
stub val GL_EMISSION : uint
stub val GL_SHININESS : uint
stub val GL_AMBIENT_AND_DIFFUSE : uint


stub def glCreateProgram : GLuint
stub def glAttachShader(program : GLuint, shader : GLuint)
stub def glAttachShader(program : GLuint, shader : GLuint)
stub def glLinkProgram(program : GLuint)
stub def glDeleteProgram(program : GLuint)
stub def glUseProgram(program : GLuint)
stub def glDeleteShader(shader : GLuint)
stub def egGetProgramError(program : GLuint) : string?
stub def glCreateShader(shaderType : GLenum) : GLuint
stub def egShaderSource(shader : GLuint, source : string)
stub def glCompileShader(shader : GLuint)
stub def egGetShaderError(shader : GLuint) : string?

stub val GL_VERTEX_SHADER : GLenum
stub val GL_FRAGMENT_SHADER : GLenum