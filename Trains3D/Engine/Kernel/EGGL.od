import EGTypes
import EGMatrix

stub struct GLenum
stub struct GLint
stub struct GLuint
stub struct GLubyte
stub struct GLsizei
stub struct GLboolean
stub struct GLsizeiptr

stub def egClear

stub def egColor3(r : float, g : float, b : float)
stub def egColor4(r : float, g : float, b : float, a : float)
stub def egColor(color : EGColor)

stub def glutSolidCube(size :float)


stub def glEnable(: uint)
stub def glDisable(: uint)
stub val GL_DEPTH_TEST : uint
stub val GL_BLEND : uint

stub def glBegin(: uint)
stub def glEnd
stub val GL_QUADS : uint
stub val GL_LINES : uint

stub def egViewport(rect : EGRectI)
stub def glViewport (x : GLint, y : GLint, width : GLsizei, height : GLsizei)
stub def glUniformMatrix4fv(location : GLuint, count : GLsizei, transpose : GLboolean, value : [float4])
stub def glUniform1f(location : GLuint, f : float4)
stub def egUniformColor(location : GLuint, color : EGColor)
stub def egUniformVec3(location : GLuint, color : EGVec3)

stub def glCreateProgram : GLuint
stub def glAttachShader(program : GLuint, shader : GLuint)
stub def glAttachShader(program : GLuint, shader : GLuint)
stub def glLinkProgram(program : GLuint)
stub def glDeleteProgram(program : GLuint)
stub def glUseProgram(program : GLuint)
stub def egGetAttribLocation(program : GLuint, name : string) : GLint
stub def egGetUniformLocation(program : GLuint, name : string) : GLint
stub def egGetProgramError(program : GLuint) : string?

stub def glDeleteShader(shader : GLuint)
stub def glCreateShader(shaderType : GLenum) : GLuint
stub def egShaderSource(shader : GLuint, source : string)
stub def glCompileShader(shader : GLuint)
stub def egGetShaderError(shader : GLuint) : string?

stub val GL_VERTEX_SHADER : GLenum
stub val GL_FRAGMENT_SHADER : GLenum

stub def egGenBuffer : GLuint
stub def egDeleteBuffer(handle : GLuint)
stub def glBindBuffer(target : GLenum, handle : GLuint) : GLuint
stub def glBufferData(target : GLenum, size : GLsizeiptr, data : [void], usage : GLenum)
stub def egVertexAttribPointer(slot : GLuint, size : uint, tp : GLenum, normalized : GLboolean, stride : uint, shift : uint)
stub def glDrawElements(mode : GLenum, count : GLsizei, tp : GLenum, indices : [void])
stub def glDrawArrays(mode : GLenum, first : GLint, count : GLsizei)
stub def glEnableVertexAttribArray(handle : GLint)
stub def glDisableVertexAttribArray(handle : GLint)

stub val GL_TRIANGLES : GLenum

stub val GL_FLOAT : GLenum
stub val GL_DOUBLE : GLenum
stub val GL_BYTE : GLenum
stub val GL_UNSIGNED_BYTE : GLenum
stub val GL_INT : GLenum
stub val GL_UNSIGNED_INT : GLenum

stub val GL_TRUE : GLboolean
stub val GL_FALSE : GLboolean

stub def glBlendFunc(sfactor : GLenum, dfactor : GLenum)
stub val GL_SRC_ALPHA : uint
stub val GL_ONE_MINUS_SRC_ALPHA : uint
