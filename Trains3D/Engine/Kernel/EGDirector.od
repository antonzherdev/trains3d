import EGScene
import EGTime
import EGStat
import EGTypes
import EGGL
import EGContext
import EGProcessor

class EGDirector {
    var scene : EGScene
    var started = false | private set
    var paused = false | private set
    val time : EGTime = EGTime
    static var current : EGDirector = self
    val context = EGContext

    def drawWith(size : EGSize) {
        egClear
        glEnable(GL_DEPTH_TEST)
        scene.drawWith(size)
        glDisable(GL_DEPTH_TEST)
        stat.draw
    }

    def process(event : EGEvent) {
        scene.process(event)
    }

    def start {
        started = true
        time.start
    }

    def stop {
        started = false
    }

    def pause {
        paused = true
    }

    def resume {
        if(paused) {
            paused = false
            time.start
        }
    }

    def tick {
        time.tick
        scene.updateWith(time.delta)
        stat.tickWith(delta = time.delta)
    }

    var stat : EGStat | private set
    var displayStats : bool |
        get = stat == nil
        set = {
            stat = if(displayStats) EGStat else nil
        }
}