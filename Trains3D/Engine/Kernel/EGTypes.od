package com.antonzherdev.eg

import EGVec
import core.ODMath._

struct EGRect(x : float, width : float, y : float, height : float) {
    def contains(point : EGVec2) : bool = x <= point.x && point.x <= x + width && y <= point.y && point.y <= y + height
    def x2 : float = x + width
    def y2 : float = y + height

    static def newXY(x : float, x2: float, y : float, y2 : float) : EGRect = EGRect(x, x2 - x, y, y2 - y)

    def move(x : float, y : float) = EGRect(self.x + x, width, self.y + y, height)
    def moveToCenterFor(size : EGVec2) = EGRect((size.x - width)/2, width, (size.y - height)/2, height)
    def point : EGVec2 = EGVec2(x, y)
    def size : EGVec2 = EGVec2(width, height)

    def intersects(rect : EGRect) : bool =
        x <= rect.x2 && x2 >= rect.x &&
        y <= rect.y2 && y2 >= rect.y

    def thicken(x : float, y : float) = EGRect(self.x - x, width + 2*x, self.y - y, height + 2*y)

}
struct EGRectI(x : int, width : int, y : int, height : int) {
    static def apply(rect : EGRect) = EGRectI(lround(rect.x), lround(rect.width), lround(rect.y), lround(rect.height))
    static def newXY(x : float, x2: float, y : float, y2 : float) : EGRectI = EGRectI(x, x2 - x, y, y2 - y)
    def x2 : int = x + width
    def y2 : int  = y + height
}

struct EGColor(r : float4, g : float4, b : float4, a : float4) {
    static val white = EGColor(1, 1, 1, 1)
}

trait EGController {
    def updateWith(delta : float)
}

trait EGCamera {
    def focusFor(viewSize : EGVec2)

    def translateWith(viewSize : EGVec2, viewPoint : EGVec2) : EGVec2
}

trait EGView extends EGController {
    def camera : EGCamera

    def drawView

    def environment = EGEnvironment.default

    def updateWith(delta : float) {}
}



class EGEnvironment(ambientColor : EGColor, lights : [EGLight]) {
    static val default = EGEnvironment(EGColor(1, 1, 1, 1), [])
    static def apply(lights : [EGLight]) = EGEnvironment(EGColor(1, 1, 1, 1), lights)
    static def apply(light : EGLight) = EGEnvironment(EGColor(1, 1, 1, 1), [light])
}

class EGLight(color : EGColor)
class EGDirectLight(color : EGColor, direction : EGVec3) extends EGLight(color)