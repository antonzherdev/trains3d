package com.antonzherdev.eg

struct EGColor(r : float4, g : float4, b : float4, a : float4) {
    static val white = EGColor(1, 1, 1, 1)
}

trait EGController {
    def updateWith(delta : float)
}

trait EGCamera {
    def focusFor(viewSize : Vec2)

    def translateWith(viewSize : Vec2, viewPoint : Vec2) : Vec2
}

trait EGView extends EGController {
    def camera : EGCamera

    def drawView

    def environment = EGEnvironment.default

    def updateWith(delta : float) {}
}



class EGEnvironment(ambientColor : EGColor, lights : [EGLight]) {
    static val default = EGEnvironment(EGColor(1, 1, 1, 1), [])
    static def apply(lights : [EGLight]) = EGEnvironment(EGColor(1, 1, 1, 1), lights)
    static def apply(light : EGLight) = EGEnvironment(EGColor(1, 1, 1, 1), [light])
}

class EGLight(color : EGColor)
class EGDirectLight(color : EGColor, direction : Vec3) extends EGLight(color)