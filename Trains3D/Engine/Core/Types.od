package com.antonzherdev.eg

struct Color(r : float4, g : float4, b : float4, a : float4) {
    static val white = Color(1, 1, 1, 1)
}

trait Controller {
    def updateWith(delta : float)
}

trait Camera {
    def focusFor(viewSize : vec2)

    def translateWith(viewSize : vec2, viewPoint : vec2) : vec2

    def viewportWith(viewSize : vec2) : recti
}




class Environment(ambientColor : Color, lights : [Light]) {
    static val default = Environment(Color(1, 1, 1, 1), [])
    static def apply(lights : [Light]) = Environment(Color(1, 1, 1, 1), lights)
    static def apply(light : Light) = Environment(Color(1, 1, 1, 1), [light])
}

class Light(color : Color)
class DirectLight(color : Color, direction : vec3) extends Light(color)