package com.antonzherdev.eg

class Texture {
    val id : GLuint = egGenTexture

    def bind {
        glEnable(GL_TEXTURE_2D)
        glBindTexture(GL_TEXTURE_2D, id)
    }

    def dealloc {
        egDeleteTexture(id)
    }

    static def unbind {
        glBindTexture(GL_TEXTURE_2D, 0)
        glDisable(GL_TEXTURE_2D)
    }
    def apply(draw: () -> void) {
        bind
        draw()
        unbind
    }

    def saveTo(file : string) {
        egSaveTextureToFile(id, file)
    }
}

class FileTexture(file : string) extends Texture  {
    private var _loaded = false
    private var _size : vec2

    private def load {
        _size = egLoadTextureFromFile(id, Bundle.fileNameFor(file))
        _loaded = true
    }

    def size : vec2 = {
        if(!_loaded) load
        _size
    }
    def bind {
        if(!_loaded) load
        glEnable(GL_TEXTURE_2D)
        glBindTexture(GL_TEXTURE_2D, id)
    }
}