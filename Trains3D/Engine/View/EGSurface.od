import EGGL
import EGTexture

class EGSurface(width : uint, height : uint) {
    private val frameBuffer = egGenFrameBuffer
    private val texture = EGTexture()
    def init {
        glBindFramebuffer(GL_FRAMEBUFFER, frameBuffer)
        glBindTexture(GL_TEXTURE_2D, texture.id)

        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE)
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE)
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
        glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, 0)
        glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, texture.id, 0)

        glBindTexture(GL_TEXTURE_2D, 0)
        glBindFramebuffer(GL_FRAMEBUFFER, 0)
    }

    def dealloc {
        egDeleteFrameBuffer(frameBuffer)
    }

    def apply(draw : () -> void) {
        bind
        draw()
        unbind
    }

    def bind {
        glPushAttrib(GL_VIEWPORT_BIT)
        glBindFramebuffer(GL_FRAMEBUFFER, frameBuffer)
        glViewport(0, 0, width, height)
    }

    def unbind {
        glBindFramebuffer(GL_FRAMEBUFFER, 0)
        glPopAttrib
    }

    def draw {

    }
}