package com.antonzherdev.eg

object D3D {
    private val vertexes = VoidRefArray(MeshData.type, 4)
    private val vb = VertexBuffer.mesh
    private val defaultQuadUv = Quad(vec2(0, 0), vec2(0, 1), vec2(1, 0), vec2(1, 1))
    def drawQuad(material : ColorSource, quad3 : Quad3) {
        drawQuad(material, quad3, defaultQuadUv)
    }


    def drawQuad(material : ColorSource, quad3 : Quad3, uv : Quad) {
        var v = vertexes
        v = v.write(MeshData, MeshData(uv.p[0], quad3.planeCoord.plane.n, quad3.p0))
        v = v.write(MeshData, MeshData(uv.p[1], quad3.planeCoord.plane.n, quad3.p1))
        v = v.write(MeshData, MeshData(uv.p[2], quad3.planeCoord.plane.n, quad3.p2))
        v = v.write(MeshData, MeshData(uv.p[3], quad3.planeCoord.plane.n, quad3.p3))
        vb.set(vertexes)

        context.cullFace.disabled {
            material.draw(vb, GL_TRIANGLE_STRIP)
        }
    }


}
