package com.antonzherdev.eg

struct MeshData(uv : vec2, normal : vec3, position : vec3)


class Mesh(vertex : VertexSource, index : IndexSource) {
    static def vec2(vertexData : PArray<vec2>, indexData : PArray<uint4>) : Mesh = Mesh(
            vertex = VertexBuffer.vec2(vertexData),
            index = IndexBuffer(indexData))

    static def apply(vertexData : PArray<MeshData>, indexData : PArray<uint4>) : Mesh = Mesh(
            vertex = VertexBuffer.mesh(vertexData),
            index = IndexBuffer(indexData))

    static def apply<T>(desc : VertexBufferDesc<T>, vertexData : PArray<T>, indexData : PArray<uint4>) : Mesh = Mesh(
            vertex = VertexBuffer<T>(desc, vertexData),
            index = IndexBuffer(indexData))

    def vaoWith(shader : Shader<_>) : Mesh = Mesh(shader.vaoWith(vertex.cast<VertexBuffer<_>>), index)
    def vaoWith(material : Material) : Mesh = Mesh(material.shader.vaoWith(vertex.cast<VertexBuffer<_>>), index)
    def vaoWith<P>(shaderSystem : ShaderSystem<P>, material : P) : Mesh =
        Mesh(shaderSystem.vaoWith(material, vertex.cast<VertexBuffer<_>>), index)
}


