package com.antonzherdev.eg


import core.math._

class CameraIso(tilesOnScreen : vec2i, zReserve : float4, center : vec2) extends Camera {
    private static val ISO = MapSso.ISO

    private val ww : float = tilesOnScreen.x + tilesOnScreen.y
    private val isoWW2 = ww*ISO/2
    private val yReserve = zReserve * 0.612372
    val viewportRatio : float = 2*ww/(yReserve*2 + ww)

    static val m = mat4.identity.rotate(90, 1, 0, 0)
    static val w = mat4.identity.rotate(-90, 1, 0, 0)

    val matrixModel : MatrixModel = MatrixModel(
        m = m,
        w = w,
        c = mat4.identity
            .translate(-isoWW2 + ISO, -ISO*(tilesOnScreen.y - tilesOnScreen.x)/4 + isoWW2/2, -1000)
            .rotate(30, 1, 0, 0)
            .rotate(-45.0, 0, 1, 0),
        p = mat4.ortho(-isoWW2, isoWW2, 0, (ww + 2*yReserve)*ISO/2, 0.0, 2000.0)
    )

    def focus {
        glCullFace(GL_FRONT)
    }
}

