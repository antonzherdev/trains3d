package com.antonzherdev.eg

stub class EGCollisionBody<T>(data : T, shape : EGCollisionShape, isKinematic : bool) {
    val obj : VoidRef = nil
    private var _matrix : mat4 = mat4.identity
    def matrix = _matrix
    def set(matrix : mat4) {
        _matrix = matrix
    }

    def translate(x : float4, y : float4, z : float4) {
        _matrix = _matrix.translate(x, y, z)
    }

    def rotate(angle : float4, x : float4, y : float4, z : float4) {
        _matrix = _matrix.rotate(angle, x, y, z)
    }
}

stub trait EGCollisionShape {
    def shape : VoidRef = nil
}

stub class EGCollisionBox(halfSize : vec3) extends EGCollisionShape {
    static def apply(x : float4, y : float4, z : float4) = EGCollisionBox(vec3(x, y, z))
}

stub class EGCollisionBox2d(halfSize : vec2) extends EGCollisionShape {
    static def apply(x : float4, y : float4) = EGCollisionBox2d(vec2(x, y))
}

stub class EGCollisionPlane(normal : vec3, distance : float4) extends EGCollisionShape