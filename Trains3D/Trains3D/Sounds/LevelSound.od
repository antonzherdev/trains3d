package com.antonzherdev.trains


class LevelSound(level : Level) extends SoundPlayersCollection([
    TreeSound(level),
    TrainSound(level),
    NotificationSoundPlayer(Sound("CrashBack.wav", 0.7), Level.crashNotification),
    NotificationSoundPlayer(Sound("CrashBack.wav", 0.7), Level.knockDownNotification),
    CollisionSound("Crash1", TrainsDynamicWorld.carsCollisionNotification, 0.5, 1.0),
    CollisionSound("GroundCrash1", TrainsDynamicWorld.carAndGroundCollisionNotification, 0.3, 0.7),
    NotificationSoundPlayer(Sound("SporadicDamage.wav", 0.15), Level.sporadicDamageNotification),
    NotificationSoundPlayer(Sound("TrainPreparing.wav", 0.2), Level.expectedTrainNotification),
    NotificationSoundPlayer(Sound("TrainRun.wav", 0.1), Level.prepareToRunTrainNotification),
    NotificationSoundPlayer(Sound("CityBuild.wav", 0.15), Level.buildCityNotification, level.cities.count > 2),
    NotificationSoundPlayer(Sound("RefuseBuild.wav", 0.2), RailroadBuilderProcessor.refuseBuildNotification),
    NotificationSoundPlayer(Sound("RefuseBuild.wav", 0.2), SwitchProcessor.strangeClickNotification),
    NotificationSoundPlayer(Sound("Click.wav", 0.3), Switch.turnNotification),
    NotificationSoundPlayer(Sound("Beep.wav", 0.3), RailLight.turnNotification),
    NotificationSoundPlayer(Sound("BuildMode.wav", 0.3), RailroadBuilder.buildModeNotification),
    NotificationSoundPlayer(Sound("BuildMode.wav", 0.3), RailroadBuilder.clearModeNotification),
    NotificationSoundPlayer(Sound("Fix.wav", 0.3), Level.fixDamageNotification)
])

class CollisionSound(name : string, notificationHandle : NotificationHandle<Level, float4>, impulseK : float4, volume : float4) extends SoundPlayer {
    val sound = SoundParallel(5, Sound("$name.wav"))
    private var obs : NotificationObserver?
    def start{
        obs = notificationHandle.observe { _, impulse ->
            var imp = impulseK * impulse.abs
            if(imp > 0.1) {
                if(imp > 1.0) imp = 1.0
                sound.playWith(volume = imp*volume)
            }
        }
    }
    def stop{
        obs.for(_.detach)
        obs = nil
    }
}