package com.antonzherdev.trains

class TreeSound(level : Level) extends SoundPlayersCollection(
    if(level.rules.weatherRules.isRain)
        [WindSound(level.forest)
        , RainSound(level.weather)
        ]
    else if(level.rules.weatherRules.isSnow)
        [WindSound(level.forest)]
    else if(level.rules.theme == LevelTheme.forest || level.rules.theme == LevelTheme.leafForest)
        [WindSound(level.forest)
        ,SporadicSoundPlayer(Sound("Nightingale.mp3", 0.1), 120)
        ,SporadicSoundPlayer(Sound("Crow.mp3", 0.1), 240)
        ,SporadicSoundPlayer(Sound("Crows.mp3", 0.03), 240)
        ,SporadicSoundPlayer(Sound("Woodpecker.mp3", 0.4), 120)
        ,SporadicSoundPlayer(Sound("Cuckoo.mp3", 0.4), 120)
        ,SporadicSoundPlayer(Sound("Grouse.mp3", 0.35), 120)
        ]
    else
        [WindSound(level.forest)
        ,SporadicSoundPlayer(Sound("Crow.mp3", 0.1), 60)
        ,SporadicSoundPlayer(Sound("Crows.mp3", 0.03), 120)
        ]
)

class WindSound(forest : Forest) extends BackgroundSoundPlayer(Sound("Rustle.mp3", 0)) {
    def updateWith(delta : float) {
        val w = forest.weather.wind
        sound.volume = w.lengthSquare*2
    }
}

class RainSound(weather : Weather) extends BackgroundSoundPlayer(Sound("Rain.mp3", 0)) {
    def updateWith(delta : float) {
        val w = weather.wind
        sound.volume = 0.15 + w.lengthSquare*8
    }
}

