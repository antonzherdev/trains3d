package com.antonzherdev.trains

class Levels {
    private static val level1TrainComingPeriod = 4
    private static val level1 =
    LevelRules(vec2i(5, 3), LevelTheme.forest, trainComingPeriod = level1TrainComingPeriod, scoreRulesWith(20000), LevelFactory.rewindRules,
        WeatherRules(sunny = 1.0, windStrength = 0.2, blastness = 0.05, blastMinLength = 1, blastMaxLength = 3, blastStrength = 0.3, nil),
        repairerSpeed = 20, sporadicDamagePeriod = 0, [
        (0, create2Cities),
        (1, showHelp(Loc.helpConnectTwoCities)),
        (20, train(cars = 2, speed = 30)),
        (level1TrainComingPeriod + 7, showTrainHelp),
        (36, createNewCity),
        (1, showHelp(Loc.helpNewCity)),
        (20, train(cars = 1, speed = 30)),
        (level1TrainComingPeriod + 3, showTrainHelpWithSwitches),
        (40, train(cars = 3, speed = 30)),
        (1, showHelp(Loc.helpRules))
    ])

    private static val level2 = LevelRules(vec2i(5, 3), LevelTheme.forest, trainComingPeriod = 7, scoreRulesWith(20000), LevelFactory.rewindRules,
    WeatherRules(sunny = 1.0, windStrength = 0.2, blastness = 0.1, blastMinLength = 1, blastMaxLength = 3, blastStrength = 0.3, nil),
    repairerSpeed = 20, sporadicDamagePeriod = 0, [
        (0, create2Cities),
        (1, showHelp("help.tozoom", Loc.helpToMakeZoom)),
        (9, slowTrain),
        (5, showHelp("help.remove", Loc.helpToRemove)),
        (15, createNewCity), (15, slowTrain), (30, slowTrain),
        (10, createNewCity), (15, slowTrain), (10, slowTrain)
    ])
    private static val level3 = LevelRules(vec2i(5, 3), LevelTheme.forest, trainComingPeriod = 10, scoreRulesWith(30000), LevelFactory.rewindRules,
    WeatherRules(sunny = 0.0, windStrength = 0.3, blastness = 0.3, blastMinLength = 1, blastMaxLength = 5, blastStrength = 0.6, lightRain),
    repairerSpeed = 20, sporadicDamagePeriod = 0, [
        (0, create2Cities),
        (1, showHelp("help.linesAdvice", Loc.linesAdvice)),
        (9, slowTrain), (30, slowTrain), (30, slowTrain),
        (10, createNewCity), (20, slowTrain), (30, slowTrain), (30, slowTrain),
        (10, createNewCity), (20, slowTrain), (30, slowTrain), (30, slowTrain),
        (10, createNewCity), (10, slowTrain),
        (30, slowTrain), (10, slowTrain),
        (30, slowTrain),
        (30, slowTrain),
        (25, slowTrain),
        (30, slowTrain), (20, slowTrain)
    ])
    private static val level4 = LevelRules(vec2i(5, 3), LevelTheme.forest, trainComingPeriod = 10, scoreRulesWith(40000), LevelFactory.rewindRules,
    WeatherRules(sunny = 1.0, windStrength = 0.3, blastness = 0.1, blastMinLength = 1, blastMaxLength = 3, blastStrength = 0.3, nil),
    repairerSpeed = 20, sporadicDamagePeriod = 0, [
        (0, create2Cities),
        (1, showHelp("help.rewind", Loc.helpRewind)),
        (12, slowTrain), (20, slowTrain), (35, slowTrain),
        (10, createNewCity), (15, slowTrain), (25, slowTrain), (30, slowTrain),
        (15, createNewCity), (20, slowTrain), (25, slowTrain), (25, slowTrain),
        (10, createNewCity), (15, slowTrain), (25, slowTrain), (20, slowTrain),
        (40, slowTrain), (0, slowTrain),
        (40, slowTrain), (5, slowTrain), (20, slowTrain),

        (40, slowTrain), (5, slowTrain),

        (30, slowTrain), (20, slowTrain), (25, slowTrain),

        (40, slowTrain), (10, slowTrain), (25, slowTrain), (10, slowTrain), (20, slowTrain)
    ])
    private static val level5 = LevelRules(vec2i(5, 5), LevelTheme.forest, trainComingPeriod = 10, scoreRulesWith(60000), LevelFactory.rewindRules,
    WeatherRules(sunny = 1.0, windStrength = 0.3, blastness = 0.05, blastMinLength = 1, blastMaxLength = 3, blastStrength = 0.1, nil),
    repairerSpeed = 20, sporadicDamagePeriod = 0, [
        (0, create2Cities), (10, slowTrain), (17, slowTrain), (30, slowTrain),
        (10, createNewCity), (15, slowTrain), (25, slowTrain), (25, slowTrain),
        (10, createNewCity),
        (20, slowTrain), (25, slowTrain), (25, slowTrain), (20, slowTrain),
        (50, slowTrain), (10, slowTrain), (15, slowTrain), (25, slowTrain),
        (10, createNewCity),
        (15, slowTrain), (22, slowTrain), (20, slowTrain),
        (40, slowTrain), (10, slowTrain), (15, slowTrain),
        (60, slowTrain), (10, slowTrain), (25, slowTrain), (20, slowTrain),
        (10, createNewCity),
        (20, slowTrain), (10, slowTrain), (25, slowTrain),
        (40, slowTrain), (5, slowTrain), (15, slowTrain), (25, slowTrain),
        (60, slowTrain), (20, slowTrain), (10, slowTrain), (10, slowTrain),
        (60, slowTrain), (20, slowTrain), (25, slowTrain), (20, slowTrain), (15, slowTrain)
    ])

    private static val level6 = LevelRules(vec2i(5, 5), LevelTheme.winter, trainComingPeriod = 10, scoreRulesWith(60000), LevelFactory.rewindRules,
    WeatherRules(sunny = 1.0, windStrength = 0.3, blastness = 0.05, blastMinLength = 1, blastMaxLength = 3, blastStrength = 0.1, nil),
    repairerSpeed = 20, sporadicDamagePeriod = 0, [
        (0, create2Cities), (10, train), (17, train), (30, train), (15, train),
        (10, createNewCity), (15, train), (25, train), (25, train),
        (10, createNewCity),
        (20, train), (25, train), (25, train), (20, train), (25, train),
        (10, createNewCity),
        (15, train), (22, train), (20, train),
        (40, train), (10, train), (15, train),
        (40, train), (10, train), (15, train), (25, train),
        (10, createNewCity),
        (20, train), (10, train), (25, train),
        (40, train), (5, train), (15, train), (25, train),
        (40, train), (5, train), (25, train), (10, train),
        (50, train), (20, train), (10, train), (5, train),
        (60, train), (20, train), (25, train), (20, train)
    ])

    private static val stdTrainComingPeriod = 10
    private static val level7 = LevelRules(vec2i(5, 5), LevelTheme.winter, trainComingPeriod = stdTrainComingPeriod, scoreRulesWith(60000), LevelFactory.rewindRules,
    WeatherRules(sunny = 1.0, windStrength = 0.3, blastness = 0.05, blastMinLength = 1, blastMaxLength = 3, blastStrength = 0.1, nil),
    repairerSpeed = 20, sporadicDamagePeriod = 0, [
        (0, create2Cities),
            (10, expressTrain), (stdTrainComingPeriod + 3, showHelp("help.express", Loc.helpExpressTrain)),
            (15, train), (15, train),  (20, train), (15, train),
        (10, createNewCity),
        (13, train), (23, train), (23, train),
        (50, train), (20, train),
        (10, createNewCity),
        (15, train), (15, verySlowTrain), (10, train), (35, train),
        (50, verySlowTrain), (18, train), (10, train),
        (10, createNewCity),
        (13, train), (15, train), (10, train),
        (40, verySlowTrain), (10, train), (15, train),
        (40, train), (5, train), (15, train), (25, verySlowTrain),
        (40, train), (5, train), (12, train), (20, train),
        (10, createNewCity),
        (20, train), (10, train), (15, train),
        (40, train), (5, train), (22, verySlowTrain), (10, train),
        (50, verySlowTrain), (10, train), (15, train),
        (60, train), (15, train), (15, train), (20, train), (15, expressTrain)
    ])

    private static val level8 = LevelRules(vec2i(5, 5), LevelTheme.winter, trainComingPeriod = 10, scoreRulesWith(60000), LevelFactory.rewindRules,
    WeatherRules(sunny = 0.0, windStrength = 0.3, blastness = 0.3, blastMinLength = 1, blastMaxLength = 5, blastStrength = 0.6, snow),
    repairerSpeed = 20, sporadicDamagePeriod = 0, [
        (0, create2Cities), (10, train), (17, train), (20, train),
        (10, createNewCity), (10, train), (15, train), (20, train),
        (10, createNewCity),
        (20, train), (25, train), (25, expressTrain), (20, train), (25, train),
        (50, train), (0, expressTrain), (10, train),
        (10, createNewCity),
        (15, train), (22, train), (20, train),
        (40, expressTrain), (10, train), (15, train),
        (40, train), (10, train), (15, train), (22, expressTrain),
        (50, train), (10, expressTrain), (10, train), (5, verySlowTrain),
        (10, createNewCity),
        (20, verySlowTrain), (10, train), (20, train),
        (40, train), (5, train), (12, train), (22, train),
        (40, verySlowTrain), (5, train), (25, expressTrain), (10, train),
        (50, train), (0, verySlowTrain), (10, train), (5, train),
        (60, train), (20, expressTrain), (25, train), (20, expressTrain), (15, train)
    ])
//9
    private static val level9 = LevelRules(vec2i(5, 5), LevelTheme.leafForest, trainComingPeriod = 10, scoreRulesWith(60000), LevelFactory.rewindRules,
    WeatherRules(sunny = 1.0, windStrength = 0.1, blastness = 0.05, blastMinLength = 1, blastMaxLength = 3, blastStrength = 0.05, nil),
    repairerSpeed = 20, sporadicDamagePeriod = 0, [
        (0, create2Cities), (10, expressTrain), (10, train), (20, train),
        (10, createNewCity),
        (15, train), (20, expressTrain), (20, train), (20, train),
        (10, createNewCity),
        (10, expressTrain), (20, train), (22, train), (20, train), (20, train),
        (10, createNewCity),
        (15, train), (15, train), (15, train),
        (40, expressTrain), (10, verySlowTrain), (15, train), (10, train),
        (40, train), (12, expressTrain), (15, train), (25, train),
        (10, createNewCity),
        (40, train), (15, expressTrain), (20, train),
        (50, train), (20, train), (25, expressTrain), (20, train),
        (60, train), (20, train), (20, expressTrain), (15, verySlowTrain),
        (50, expressTrain), (20, train), (15, verySlowTrain), (15, train),
        (10, createNewCity),
        (40, verySlowTrain), (10, expressTrain), (10, train),
        (60, train), (20, expressTrain), (20, train), (10, verySlowTrain), (15, train),
        (50, train), (10, expressTrain), (20, verySlowTrain), (10, expressTrain), (10, train), (15, train)
    ])
    private static val level10 = LevelRules(vec2i(5, 5), LevelTheme.leafForest, trainComingPeriod = 10, scoreRulesWith(60000), LevelFactory.rewindRules,
    WeatherRules(sunny = 0.0, windStrength = 0.4, blastness = 0.5, blastMinLength = 1, blastMaxLength = 5, blastStrength = 0.9, rain),
    repairerSpeed = 20, sporadicDamagePeriod = 0, [
        (0, create2Cities), (10, train), (17, train), (20, expressTrain), (15, train),
        (10, createNewCity),
        (15, train), (20, train), (20, verySlowTrain), (20, expressTrain),
        (10, createNewCity),
        (20, train), (20, train), (20, expressTrain), (20, train), (20, train),
        (10, createNewCity),
        (15, train), (15, train), (15, train),
        (40, expressTrain), (10, train), (15, train), (10, train), (15, expressTrain),
        (40, train), (10, train), (15, train), (25, expressTrain),
        (10, createNewCity),
        (30, train), (10, expressTrain), (20, train),
        (40, verySlowTrain), (5, train), (15, train), (25, train), (15, expressTrain), (15, expressTrain),
        (40, train), (5, train), (15, train), (20, expressTrain), (10, verySlowTrain),
        (40, expressTrain), (20, train), (10, train), (5, train),
        (10, createNewCity),
        (10, verySlowTrain), (10, expressTrain), (10, train),
        (40, train), (20, expressTrain), (20, train), (10, expressTrain), (15, train),
        (40, verySlowTrain), (10, expressTrain), (10, expressTrain), (0, train), (10, expressTrain), (15, train)
    ])

    private static val level11 = LevelRules(vec2i(5, 5), LevelTheme.leafForest, trainComingPeriod = 10, scoreRulesWith(60000), LevelFactory.rewindRules,
    WeatherRules(sunny = 1.0, windStrength = 0.2, blastness = 0.1, blastMinLength = 1, blastMaxLength = 3, blastStrength = 0.2, nil),
    repairerSpeed = 20, sporadicDamagePeriod = 500, [
        (0, create2Cities), (10, train), (15, expressTrain), (30, train), (15, train),
        (10, createNewCity),
        (15, train), (20, expressTrain), (20, train), (20, train),  (20, train),
        (10, createNewCity),
        (20, train), (25, expressTrain), (15, verySlowTrain), (20, train), (20, train),
        (10, createNewCity),
        (15, train), (15, expressTrain), (15, train),
        (40, expressTrain), (15, train), (10, train), (10, train), (15, verySlowTrain),
        (40, train), (10, expressTrain), (17, train), (25, train),
        (10, createNewCity),
        (20, verySlowTrain), (10, train), (20, expressTrain),
        (40, expressTrain), (5, train), (20, train), (15, expressTrain), (15, expressTrain),
        (40, expressTrain), (10, train), (15, train), (20, train), (10, verySlowTrain),
        (50, train), (20, train), (10, train), (5, expressTrain),
        (10, createNewCity),
        (30, train), (10, expressTrain), (10, train),
        (40, train), (20, expressTrain), (20, train), (10, expressTrain), (15, train),
        (40, verySlowTrain), (10, verySlowTrain), (15, expressTrain), (15, expressTrain), (15, expressTrain), (15, expressTrain)
    ])
    private static val level12 = LevelRules(vec2i(5, 5), LevelTheme.palm, trainComingPeriod = 10, scoreRulesWith(60000), LevelFactory.rewindRules,
    WeatherRules(sunny = 1.0, windStrength = 0.3, blastness = 0.3, blastMinLength = 1, blastMaxLength = 3, blastStrength = 0.3, nil),
    repairerSpeed = 20, sporadicDamagePeriod = 400, [
        (0, create2Cities), (10, expressTrain), (17, expressTrain), (10, verySlowTrain), (10, train),
        (10, createNewCity),
        (23, train), (20, train), (18, train), (18, train),  (20, expressTrain),
        (10, createNewCity),
        (30, expressTrain), (25, verySlowTrain), (13, train), (15, train), (20, train),
        (10, createNewCity),
        (30, verySlowTrain), (15, train), (0, expressTrain), (20, train),
        (40, train), (15, train), (10, train), (10, train), (15, verySlowTrain),
        (40, expressTrain), (3, expressTrain), (17, train), (17, train),
        (10, createNewCity),
        (20, train), (10, train), (18, train), (5, train),
        (40, verySlowTrain), (5, train), (20, train), (15, expressTrain), (15, expressTrain),
        (40, train), (10, train), (15, train), (18, train), (10, train), (10, train),
        (50, expressTrain), (20, train), (10, train), (5, expressTrain),
        (10, createNewCity),
        (30, verySlowTrain), (10, expressTrain), (10, train), (0, train),
        (40, verySlowTrain), (10, expressTrain), (10, expressTrain), (10, expressTrain), (10, expressTrain), (10, expressTrain),
        (50, expressTrain), (10, verySlowTrain), (10, expressTrain), (0, expressTrain), (0, expressTrain), (15, train)
    ])

    private static val level13 = LevelRules(bigSize, LevelTheme.palm, trainComingPeriod = 10, scoreRulesWith(70000), LevelFactory.rewindRules,
    WeatherRules(sunny = 1.0, windStrength = 0.3, blastness = 0.3, blastMinLength = 1, blastMaxLength = 3, blastStrength = 0.3, nil),
    repairerSpeed = 20, sporadicDamagePeriod = 400, [
        (0, create2Cities), (10, expressTrain), (17, train), (10, train), (10, train),
        (10, createNewCity),
        (20, train), (20, train), (15, train),
        (20, createNewCity),
        (20, train), (10, verySlowTrain), (15, train), (15, expressTrain), (20, train),
        (10, createNewCity),
        (20, train), (15, train), (10, expressTrain), (10, expressTrain), (15, train),
        (40, expressTrain), (3, verySlowTrain), (17, train), (17, train),
        (10, createNewCity),
        (30, expressTrain), (7, train), (18, train), (5, verySlowTrain),
        (40, verySlowTrain), (5, train), (20, train), (15, train), (15, train),
        (40, train), (10, train), (15, train), (15, expressTrain), (10, expressTrain), (10, expressTrain),
        (10, createNewCity),
        (30, train), (10, expressTrain), (10, verySlowTrain), (0, verySlowTrain),
        (50, train), (10, train), (10, train), (10, train), (20, expressTrain), (10, expressTrain),
        (50, expressTrain), (10, train), (10, expressTrain), (10, train), (10, expressTrain), (15, train),
        (10, createNewCity),
        (30, train), (10, expressTrain), (10, train), (10, train),
        (40, verySlowTrain), (10, verySlowTrain), (10, verySlowTrain), (20, expressTrain), (20, expressTrain),
        (60, train), (10, verySlowTrain), (10, expressTrain), (0, train), (10, expressTrain), (15, train)
    ])

    private static val level14 = LevelRules(bigSize, LevelTheme.palm, trainComingPeriod = 10, scoreRulesWith(70000), LevelFactory.rewindRules,
    WeatherRules(sunny = 1.0, windStrength = 0.1, blastness = 0.1, blastMinLength = 1, blastMaxLength = 3, blastStrength = 0.1, nil),
    repairerSpeed = 20, sporadicDamagePeriod = 400, [
        (0, create2Cities), (10, train), (15, train), (10, expressTrain),
        (10, createNewCity),
        (20, train), (20, expressTrain), (15, train), (30, crazyTrain),
        (20, createNewCity),
        (15, expressTrain), (10, expressTrain), (15, verySlowTrain), (15, expressTrain),
        (10, createNewCity),
        (20, verySlowTrain), (13, train), (10, expressTrain), (10, expressTrain), (15, train),
        (40, crazyTrain), (10, expressTrain), (20, train), (15, train),
        (10, createNewCity),
        (30, train), (7, verySlowTrain), (18, train), (5, verySlowTrain),
        (40, train), (5, expressTrain), (20, train), (15, expressTrain), (15, train),
        (40, verySlowTrain), (10, train), (15, train), (15, train), (10, expressTrain), (10, train),
        (10, createNewCity),
        (30, expressTrain), (0, expressTrain), (10, verySlowTrain), (0, train),
        (50, train), (10, expressTrain), (10, verySlowTrain), (10, train), (20, crazyTrain),
        (50, train), (10, train), (10, expressTrain), (1, expressTrain), (1, expressTrain), (15, train),
        (10, createNewCity),
        (30, train), (0, train), (1, expressTrain),
        (50, verySlowTrain), (10, expressTrain), (10, verySlowTrain), (10, expressTrain), (20, train),
        (50, expressTrain), (1, expressTrain), (2, expressTrain), (3, expressTrain), (4, expressTrain),
        (60, train), (10, verySlowTrain), (10, expressTrain), (10, verySlowTrain),  (15, crazyTrain)
    ])

    private static val level15 = LevelRules(bigSize, LevelTheme.palm, trainComingPeriod = 10, scoreRulesWith(70000), LevelFactory.rewindRules,
    WeatherRules(sunny = 0.0, windStrength = 0.3, blastness = 0.3, blastMinLength = 1, blastMaxLength = 5, blastStrength = 0.7, rain),
    repairerSpeed = 20, sporadicDamagePeriod = 400, [
        (0, create2Cities),
        (10, expressTrain), (15, verySlowTrain), (10, train),
        (10, createNewCity),
        (18, verySlowTrain), (20, expressTrain), (15, expressTrain), (20, train),
        (20, createNewCity),
        (15, verySlowTrain), (10, train), (15, expressTrain), (0, crazyTrain),
        (10, createNewCity),
        (25, train), (5, train), (10, expressTrain), (10, expressTrain), (15, verySlowTrain),
        (40, train), (10, train), (15, expressTrain), (10, crazyTrain),
        (10, createNewCity),
        (40, expressTrain), (1, expressTrain), (5, expressTrain), (15, train), (12, train),
        (35, verySlowTrain), (10, train), (15, crazyTrain), (15, train), (10, train), (10, crazyTrain),
        (10, createNewCity),
        (40, expressTrain), (10, expressTrain), (10, train), (10, train), (20, train),
        (50, train), (10, train), (5, train), (4, train), (3, train),
        (10, createNewCity),
        (60, train), (0, train), (0, train), (0, train), (0, train),
        (60, train), (10, train), (10, expressTrain), (0, expressTrain), (0, expressTrain),
        (10, createNewCity),
        (50, verySlowTrain), (10, crazyTrain), (10, verySlowTrain), (10, expressTrain), (20, train),
        (40, verySlowTrain), (10, verySlowTrain), (10, crazyTrain), (10, train), (10, expressTrain), (10, expressTrain),
        (40, verySlowTrain), (10, crazyTrain), (10, crazyTrain), (10, expressTrain), (0, expressTrain)
    ])

    private static val level16 = LevelRules(bigSize, LevelTheme.palm, trainComingPeriod = 10, scoreRulesWith(70000), LevelFactory.rewindRules,
    WeatherRules(sunny = 1.0, windStrength = 0.1, blastness = 0.1, blastMinLength = 1, blastMaxLength = 3, blastStrength = 0.1, nil),
    repairerSpeed = 20, sporadicDamagePeriod = 380, [
        (0, create2Cities),
        (10, train), (15, expressTrain), (10, train), (10, crazyTrain),
        (10, createNewCity),
        (15, train), (15, verySlowTrain), (15, crazyTrain), (15, train),
        (15, createNewCity),
        (15, expressTrain), (10, expressTrain), (15, train), (0, train),
        (15, createNewCity),
        (10, train), (5, expressTrain), (10, expressTrain), (10, expressTrain), (15, crazyTrain),
        (40, crazyTrain), (10, verySlowTrain), (15, verySlowTrain), (10, expressTrain),
        (10, createNewCity),
        (40, crazyTrain), (10, crazyTrain), (10, verySlowTrain), (10, expressTrain), (10, expressTrain),
        (40, verySlowTrain), (10, train), (15, expressTrain), (15, expressTrain), (10, train),
        (10, createNewCity),
        (40, train), (10, verySlowTrain), (10, expressTrain), (10, expressTrain), (20, train),
        (50, expressTrain), (10, expressTrain), (5, train), (4, expressTrain), (3, crazyTrain),
        (10, createNewCity),
        (60, train), (0, expressTrain), (20, train), (0, expressTrain), (20, train), (0, expressTrain),
        (60, train), (0, crazyTrain), (20, train), (0, crazyTrain), (20, train), (0, crazyTrain),
        (10, createNewCity),
        (50, verySlowTrain), (0, verySlowTrain), (0, verySlowTrain), (0, verySlowTrain),
        (60, train), (0, train), (0, train), (0, train),
        (60, expressTrain), (0, expressTrain), (0, expressTrain), (0, expressTrain),
        (60, crazyTrain), (0, crazyTrain), (0, crazyTrain), (0, crazyTrain)
    ])

    private static val rules = [
        level1,  level2,  level3,  level4,
        level5,  level6,  level7,  level8,
        level9,  level10, level11, level12,
        level13, level14, level15, level16
    ]

    static def levelWith(number : uint) =
        if(number > rules.count) Level(rules.count, rules[rules.count - 1])
        else Level(number, rules[number - 1])


    private static def train(cars : Range, speed : Range) : Level -> void = (level : Level)->
        level.runTrainWith(TrainGenerator(TrainType.simple, cars, speed, [CarType.car, CarType.engine]))
    private static def expressTrain(cars : Range, speed : Range) : Level -> void = (level : Level)->
        level.runTrainWith(TrainGenerator(TrainType.fast, cars, speed, [CarType.expressCar, CarType.expressEngine]))
    private static def crazyTrain(cars : Range, speed : Range) : Level -> void = (level : Level)->
        level.runTrainWith(TrainGenerator(TrainType.crazy, cars, speed, [CarType.car, CarType.engine]))
    private static def showHelp(text : string) : Level -> void = (level : Level) -> level.showHelp(text)
    private static def showHelp(key : string, text : string) : Level -> void = (level : Level) -> GameDirector.instance.showHelp(key, text)
    private static def createNewCity : Level -> void = (level : Level) -> createNewCity(level)
    private static def createNewCity(level : Level) {
        level.createNewCity
    }
    private static def create2Cities : Level -> void = (level : Level) -> {
        level.create2Cities
    }
    private static def lightRain = Precipitation(PrecipitationType.rain, 0.5)
    private static def rain = Precipitation(PrecipitationType.rain, 1)
    private static def snow = Precipitation(PrecipitationType.snow, 1)

    static def slowTrain = train(cars = 1.to(4), speed = 35.to(40))
    static def train = train(cars = 1.to(5), speed = 20.to(50))
    static def verySlowTrain = train(cars = 1.to(2), speed = 15)
    static def expressTrain = expressTrain(cars = 3.to(5), speed = 75.to(100))
    static def crazyTrain = crazyTrain(cars = 3.to(5), speed = 40.to(60))
    static def scoreRulesWith(initialScore : int) = LevelFactory.scoreRulesWith(initialScore)

    static def showTrainHelp : Level -> void = (level : Level) -> level.trains.onSuccess{trains ->
        trains.head.for{h -> level.showHelp(Loc.helpTrain(h.color.localName))}
    }

    static def showTrainHelpWithSwitches : Level -> void = (level : Level) -> level.trains.onSuccess{trains ->
        trains.head.for{h -> level.showHelp(Loc.helpTrainWithSwitches(h.color.localName))}
    }

    private static def bigSize = if(egPlatform.isPhone) vec2i(5, 5) else vec2i(7, 5)
}