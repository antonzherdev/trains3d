package com.antonzherdev.trains

import com.antonzherdev.eg._

class LevelFactory {
    static def sceneFor(level : Level) = Scene(level, [
        Layer(LevelView(level), LevelProcessor(level)),
        Layer(LevelMenuView(level), LevelMenuProcessor(level))
    ])

    static val scoreRules = ScoreRules(
        initialScore = 100000,
        railCost = 1000,
        arrivedPrize = train -> train.cars.count * 2000,
        destructionFine = train -> train.cars.count * 3000,
        delayPeriod = 10,
        delayFine = (train, i) -> i*1000,
        repairCost = 2000
        )
    private static def train(cars : Range, speed : Range) : Level -> void = (level : Level)->
        level.runTrainWith(TrainGenerator(TrainType.simple, cars, speed, [CarType.car, CarType.engine]))
    private static def createNewCity : Level -> void = (level : Level)->
        level.createNewCity
    private static val rules = [
        LevelRules(vec2i(5, 3), scoreRules, repairerSpeed = 30, [
            (1, train(cars = 2.to(4), speed = 50.to(60).set(step = 10))),
//            (10, train(cars = 2.to(4), speed = 50.to(60).set(step = 10))),
            (15, createNewCity)//,
            //(20, train(cars = 1.to(5), speed = 30.to(60).set(step = 10)))
        ])
    ]
    static def levelWith(number : uint) = Level(rules[number - 1])
    static def levelWith(mapSize : vec2i) = Level(LevelRules(mapSize, scoreRules, repairerSpeed = 30, []))
    static def sceneForLevelWith(number : uint) = sceneFor(levelWith(number))
    static def score = Score(scoreRules)
    static def railroadWith(mapSize : vec2i) = Railroad(MapSso(mapSize), score)
}