import EGGL
import EGTypes
import EGModel
import EGMaterial

import TRTrain
import TRTypes
import TRRailPoint
import "TR3DCar.h"
import "TR3DEngine.h"

stub val Car : string
stub val CarBlack : string
stub val Engine : string
stub val EngineBlack : string
stub val EngineFloor : string

class TRTrainView {
    def draw(train : TRTrain) {
        train.cars.for(car -> {
            val h = car.head.point
            val t = car.tail.point

            glPushMatrix
            val mid = h.mid(point = t)
            egTranslate(mid.x, mid.y, 0.05)

            val angle = (if(train.isBack) 90 else -90) + (180.0 / M_PI * t.sub(h).angle)
            egRotate(angle, 0, 0, 1)

            egRotate(90, 1, 0, 0)

            if(car.carType == TRCarType.car) {
                train.color.setMaterial
                egDrawJasModel(Car)
                EGMaterial.blackMetal.set
                egDrawJasModel(CarBlack)
            } else {
                train.color.setMaterial
                egDrawJasModel(Engine)
                egDrawJasModel(EngineFloor)
                EGMaterial.blackMetal.set
                egDrawJasModel(EngineBlack)
            }

            glPopMatrix
        })
    }

}