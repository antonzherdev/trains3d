package com.antonzherdev.trains

class LevelPauseMenuView(level : Level) extends LayerView with InputProcessor {
    val name = "LevelPauseMenu"

    private val menuView = PauseMenuView(level)
    private val helpView = HelpView(level)

    var camera : Camera

    def reshapeWith(viewport : Rect) {
        camera = Camera2D(vec2(viewport.width, viewport.height))
        menuView.reshapeWith(viewport)
        helpView.reshapeWith(viewport)
    }

    def view : PauseView =
        if(level.help.isEmpty) menuView else helpView

    def draw {
        if(!director.isPaused) return nil

        BlendFunction.standard { context.depthTest.disabled {
            D2D.drawSprite(material = vec4(0, 0, 0, 0.5), at = vec3(0, 0, 0), Rect(vec2(0, 0), context.viewport.size))
            view.draw
        }}

    }

    def isProcessorActive : bool = director.isPaused
    def process(event : Event) : bool = {
        event.tap(view)
    }
}

trait PauseView extends TapProcessor {
    def reshapeWith(viewport : Rect)
    def draw
}

trait MenuView {
    def font : Font
    def button(text : string, onClick : () -> void) : Button =
        Button(drawLine *|* Button.drawText(font, vec4(0, 0, 0, 1), text), onClick)

    def drawLine : Rect -> void = (rect : Rect) ->
        D2D.drawLine(vec4(0.3, 0.3, 0.3, 1), rect.p1, rect.p3)
}

class PauseMenuView(level : Level) extends PauseView with MenuView {
    private val menuBackSprite = Sprite(vec4(0.9, 0.9, 0.9, 1), vec2(350, 150))
    var font : Font

    private val resumeButton = button(Loc.resumeGame, director.resume)
    private val chooseLevelButton = button(Loc.chooseLevel, director.resume)
    private val restartButton = button(Loc.restart(level)) {
        SceneFactory.restartLevel
        director.resume
    }
    private val chooseLevel = button(Loc.resumeGame, director.resume)

    def reshapeWith(viewport : Rect) {
        val s = context.scale
        val width = 350*s
        val height = 150*s
        val delta = 50*s
        font = fontWith(name = "lucida_grande", size = 24)

        menuBackSprite.size = vec2(width, height)
        val p = menuBackSprite.rect.moveToCenterFor(viewport.size).p0
        menuBackSprite.position = p
        chooseLevelButton.rect = Rect(p, vec2(width, delta))
        restartButton.rect = Rect(p + vec2(0, delta), vec2(width, delta))
        resumeButton.rect = Rect(p + vec2(0, 2*delta), vec2(width, delta))
    }

    def draw {
        menuBackSprite.draw
        resumeButton.draw
        restartButton.draw
        chooseLevelButton.draw
    }

    def tap(event : Event) : bool =
        resumeButton.tap(event)
        || restartButton.tap(event)
}

class WinMenu(level : Level) extends PauseView {

}

class HelpView(level : Level) extends PauseView {
    private var helpFont : Font
    def reshapeWith(viewport : Rect) {
        helpFont = fontWith(name = "lucida_grande", size = 16)
    }

    private val helpBackSprite = Sprite(LevelMenuView.backgroundColor, vec2(0, 0))
    def draw {
        val help = level.help.get
        val size = helpFont.measureC(help.text)*vec2(1.1, 1.4)
        val rect = size.rectInCenterWith(context.viewport.size)

        helpBackSprite.set(rect = rect)
        helpBackSprite.draw
        helpFont.draw(help.text, color = vec4(0, 0, 0, 1), at = rect.center - vec2(rect.size.x*0.45, 0), TextAlignment(-1, 0))
    }

    def tap(event : Event) : bool = {
        level.clearHelp
        true
    }
}