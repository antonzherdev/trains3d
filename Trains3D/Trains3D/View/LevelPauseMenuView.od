package com.antonzherdev.trains

class LevelPauseMenuView(level : Level) extends LayerView with InputProcessor with TapProcessor {
    val name = "LevelPauseMenu"

    private var _lastViewportSize : vec2 = vec2(0, 0)
    private var _lastCamera : Camera

    private val cameraCache = Cache<Rect, Camera>(viewport -> Camera2D(vec2(viewport.width, viewport.height)))
    def cameraWith(viewport : Rect) : Camera = cameraCache(viewport)

    private val menuBackSprite = Sprite(ColorSource(vec4(220, 220, 220, 255)/255), vec2(350, 150))
    private val resumeLine = Line2d(vec4(49, 90, 3, 255)/255)
    private val restartLine = Line2d(vec4(248, 149, 21, 255)/255)
    private val mainMenuLine = Line2d(vec4(211, 131, 235, 255)/255)

    def draw {
        if(!director.isPaused) return nil

        BlendFunction.standard { context.depthTest.disabled {
//            glLineWidth(2)
            val s = context.scale
            val width = 350*s
            val height = 150*s
            D2D.drawSprite(material = vec4(0, 0, 0, 0.5), at = vec3(0, 0, 0), Rect(vec2(0, 0), context.viewport.size))
            menuBackSprite.size = vec2(width, height)
            val p = menuBackSprite.rect.moveToCenterFor(context.viewport.size).p0
            menuBackSprite.position = p
            menuBackSprite.draw
            val d = 50*s

            val font = fontWith(name = "lucida_grande", size = 24)
            val textRel = p + vec2(35, 18)*s
            resumeLine.p0 = vec2(p.x, p.y + 2*d)
            resumeLine.p1 = vec2(p.x + width, p.y + 2*d)
            resumeLine.draw
            font.draw(text = Loc.resumeGame, color = vec4(0, 0, 0, 1), at = vec3(textRel + vec2(0, 2*d), 0), TextAlignment.baseline(-1))


            restartLine.p0 = vec2(p.x, p.y + d)
            restartLine.p1 = vec2(p.x + width, p.y + d)
            restartLine.draw
            font.draw(text = Loc.restartLevel, color = vec4(0, 0, 0, 1), at = vec3(textRel + vec2(0, d), 0), TextAlignment.baseline(-1))

            mainMenuLine.p0 = vec2(p.x, p.y)
            mainMenuLine.p1 = vec2(p.x + width, p.y)
            mainMenuLine.draw
            font.draw(text = Loc.mainMenu, color = vec4(0, 0, 0, 1), at = vec3(textRel, 0), TextAlignment.baseline(-1))
//            glLineWidth(1)
        }}

    }


    def isProcessorActive : bool = director.isPaused
    def process(event : Event) : bool = {
        event.tap(self)
    }

    def tap(event : Event) : bool = {
        val p = event.location
        if(menuBackSprite.contains(p)) {
            if(p.y > resumeLine.p0.y) director.resume
            else if(p.y > restartLine.p0.y) {
                SceneFactory.restartLevel
                director.resume
            }
            true
        } else false
    }
}