package com.antonzherdev.trains

import com.antonzherdev.eg.Text._
import com.antonzherdev.eg.Progress._

class LevelMenuView(level : Level) extends LayerView {
    val camera : Camera = Camera2D(vec2(16, 1))
    val smallFont = fontWith(name = "verdana", size = 14)
    val bigFont = fontWith(name = "verdana", size = 28)
    def font = if(context.viewport.size.y > 50) bigFont else smallFont

    val notificationProgress = gap2(0.7, 1) >> vec4(1, 1, 1, 1 - _)
    def drawView {
        font.draw(text = level.score.score, color = vec4(1, 1, 1, 1), at = vec2(0, 0), TextAlignment(-1, -1))
        val seconds : int = level.schedule.time
        font.draw(text = seconds, color = vec4(1, 1, 1, 1), at = vec2(15, 0), TextAlignment(1, -1))

        Sprite.draw(ColorSource(vec4(1, 0, 0, 1)), in = rect(15, 0, 1, 1))

        notificationAnimation.for{t ->
            font.draw(text = notificationText, notificationProgress(t), at = vec2(8,0), TextAlignment(0, -1))
        }

        if(!level.railroad.damagesPoints.isEmpty && level.repairer.isEmpty) {
            /*glPushMatrix
            level.cities.for(city -> {
                city.color.set
                egRect(0, 0, 0.1, 0.1)
                egTranslate(0.1, 0, 0)
            })
            glPopMatrix*/
        }
    }

    private var notificationText = ""
    private var notificationAnimation = Counter()

    def updateWith(delta : float) {
        if(notificationAnimation.isRun) notificationAnimation.updateWith(delta)
        else if(!level.notifications.isEmpty) {
            notificationText = level.notifications.take.get
            notificationAnimation = Counter(1)
        }
    }

}