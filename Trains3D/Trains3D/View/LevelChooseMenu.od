package com.antonzherdev.trains


class LevelChooseMenu extends SceneView {
    static def scene = Scene(LevelChooseMenu())
    val name = "Level Choose manu"
    val maxLevel = GameDirector.instance.maxAvailableLevel
    def camera = Camera2D(vec2(4, 4))
    private val buttons : [Button] = 0.to(3).chain.flatMap{ y ->
        0.to(3).chain.map{ x ->
            val level = (3 - y)*4 + x + 1
            Button(Rect(x, y, 1, 1), drawButton(x, y, level), GameDirector.instance.set(level = level))}
    }.toArray

    private var font : Font
    def reshapeWith(viewport : Rect) {
        font = fontWith(name = "lucida_grande", size = 24)
    }

    private def drawButton(x : int, y : int, level : int) = {
        rect : Rect -> {
            val dis = level > maxLevel
            D2D.drawSprite(vec4(0.95, 0.95, 0.95, 1.0), vec3(x, y + 0.8, 0), Rect(0, 0, 1, 0.2))

            BlendFunction.standard {
                font.draw(Loc.level(level), vec3(x + 0.5, y + 0.92, 0), TextAlignment(0, 0), color = vec4(0, 0, 0, 1))
                if(dis) {
                    D2D.drawSprite(vec4(1, 1, 1, 0.7), vec3(x, y, 0), Rect(0, 0, 1, 1))
                }
            }
        }
    }

    def draw {
        context.depthTest.disabled {
            D2D.drawSprite(textureFor("Levels.jpg"), vec3(0, 0, 0), Rect(0, 0, 4, 4).stripQuad, Rect(0, 0, 1, 0.75).upsideDownStripQuad)

            BlendFunction.standard {
                buttons.for(_.draw)
            }

            1.to(3).for{ c ->
                D2D.drawLine(vec4(0.5, 0.5, 0.5, 1), vec2(c, 0), vec2(c, 5))
//                D2D.drawLine(vec4(0.5, 0.5, 0.5, 1), vec2(0, c), vec2(5, c))
            }
        }
    }

    def isProcessorActive : bool = true
    def recognizers : Recognizers = Recognizer(Tap()){event -> buttons.exists(_.tap(event))}

    def viewportWith(viewSize : vec2) : Rect = Rect(0, 0, viewSize)
}
