package com.antonzherdev.trains


object Str {
    val Loc : Strings = {
        val locales : [string : Strings] = [EnStrings(), RuStrings(), JpStrings(), KoStrings()].chain.map{strs ->
            (strs.language, strs)
        }.toMap
//        KoStrings()
        Locale.preferredLanguages.chain.flatMap<Strings>{lng -> locales.opt(lng)}.headOpt.getOrElse(EnStrings())
    }
}


class Strings(language : string) {
    def format(cost : int) : string = {
        var i = 0
        val a = "'".head
        val str = "$cost".chain.reverse.flatMap{s ->
            i++
            if(i == 3) List(s, List(a))
            else Option(s)
        }.reverse.charsToString

        "\$$str"
    }

    private static val fakeTrain = Train(nil, TrainType.simple, CityColor.orange, [], 10)
    private static val fakeCrazyTrain = Train(nil, TrainType.crazy, CityColor.grey, [], 10)
    def notificationsCharSet : string =
        "\$0123456789'" + railBuilt(0)
        + trainArrived(fakeTrain, 0) + trainArrived(fakeCrazyTrain, 0)
        + trainDelayedFine(fakeTrain, 0) + trainDelayedFine(fakeCrazyTrain, 0)
        + trainDestroyed(0) + damageFixedPayment(0) + cityBuilt

    def level(number : uint) : string
    def startLevel(number : uint) : string = level(number)
    def railBuilt(cost : int) : string
    def trainArrived(train : Train, cost : int) : string
    def trainDestroyed(cost : int) : string
    def trainDelayedFine(train : Train, cost : int) : string
    def damageFixedPayment(cost : int) : string
    def cityBuilt : string

    private static val fakeLevel = Level(1, nil)
    def menuButtonsCharacterSet : string =
        "0123456789" + resumeGame + restart(fakeLevel) + replay(fakeLevel) + goToNext(fakeLevel)
        + chooseLevel + supportButton + shareButton + leaderboard + buyButton

    def resumeGame : string
    def restart(level : Level) : string
    def replay(level : Level) : string
    def goToNext(level : Level) : string
    def chooseLevel : string
    def supportButton : string
    def shareButton : string
    def leaderboard : string
    def buyButton : string


    def victory : string
    def defeat : string
    def moneyOver : string
    def result : string
    def best : string
    def error : string



    def supportEmailText : string =
        "Report a problem or tell me about your ideas.
         I will definitely reply to you and try to fix problems as soon as possible.
         Thank you very much, Anton Zherdev, developer"
    def rateText : string
    def rateNow : string
    def rateProblem : string
    def rateLater : string
    def rateClose : string

    def top(score : LocalPlayerScore) : string
    def tapToContinue : string

    def colorOrange : string = "orange"
    def colorGreen : string = "green"
    def colorPink : string = "pink"
    def colorPurple : string = "purple"
    def colorGrey : string = "grey"
    def colorBlue : string = "blue"
    def colorMint : string = "mint"
    def colorRed : string = "red"
    def colorBeige : string = "beige"
    def colorYellow : string = "yellow"


    def helpConnectTwoCities : string
    def helpRules : string
    def helpNewCity : string
    def helpSporadicDamage : string
    def helpDamage : string
    def helpRepairer : string
    def helpCrazy : string
    def helpInZoom : string
    def helpExpressTrain : string
    def helpTrain(to : string) : string
    def helpTrainWithSwitches(to : string) : string
    def helpToMakeZoom : string
    def linesAdvice : string
    def helpSlowMotion : string

    def shareText(url : string) : string
    def shareSubject : string
    def twitterText(url : string) : string
}

class EnStrings extends Strings("en") {
    def level(number : uint) : string = "Level $number"
    def railBuilt(cost : int) : string = "-$(format(cost)): Payment for the railroad building"
    def trainArrived(train : Train, cost : int) : string =
        if(train.trainType == TrainType.crazy) "+$(format(cost)): Reward for the arrived crazy train"
        else "+$(format(cost)): Reward for the arrived $(train.color.localName) train"
    def trainDestroyed(cost : int) : string = "-$(format(cost)): Fine for the destroyed train"
    def trainDelayedFine(train : Train, cost : int) : string =
        if(train.trainType == TrainType.crazy) "-$(format(cost)): Fine for the delayed crazy train"
        else "-$(format(cost)): Fine for the delayed $(train.color.localName) train"
    def damageFixedPayment(cost : int) : string = "-$(format(cost)): Payment for the railroad repairs"
    def resumeGame : string = "Continue the game"
    def restart(level : Level) : string = "Restart the level $(level.number)"
    def replay(level : Level) : string = "Play level $(level.number) again"
    def goToNext(level : Level) : string = "Play the next level"
    def chooseLevel : string = "Choose the level"
    def victory : string = "Victory!"
    def defeat : string = "Defeat!"
    def moneyOver : string = "Money is over"
    def cityBuilt : string = "The new city has been built"
    def tapToContinue : string = if(egPlatform.isComputer) "Click to continue" else "Tap to continue"
    def error : string = "Error"
    def buyButton : string = "Buy slow motions"

    def shareButton : string = "Share with friends"
    def supportButton : string = "Email the developer"
    def rateText : string =
        "If you enjoy playing Raildale, would you mind taking
         a moment to rate it? It won’t take more than a minute.

         If you are faced with a problem, please, report it to me.
         I will try to fix it as soon as possible.

         Thanks for your support!
         Best Regards, Anton Zherdev, developer"
    def rateNow : string = "Rate it now"
    def rateProblem : string = "Report a problem"
    def rateLater : string = "Remind me later"
    def rateClose : string = "No, thanks"

    def helpConnectTwoCities : string =
       "Connect two cities by rail.
       $if(egPlatform.touch)
        Simply paint the rails using your finger.
       $else
        Use a mouse or
        move two fingers on a touchpad.
       $endif"
    def helpRules : string =
        "Don't allow account balance to fall lower than zero.
         Stay in the allotted time with a positive balance to win a level."
    def helpNewCity : string =
        "Sometimes new cities appear.
         Connect them to your railway."
    def helpTrain(to : string) : string =
        "This train is going to the $to city.
         You can recognize it by the color of the train."
    def helpTrainWithSwitches(to : string) : string =
        "Turn railroad switches using a $if(egPlatform.touch) tap$else click$endif,
         so the train will arrive at the $to city."
    def helpExpressTrain : string =
        "This is a very fast express train.
         It doesn't have time to stop in front of a switch.
         In this case the train will be destroyed.
         But you can use lights to conduct the train."
    def helpToMakeZoom : string =
        "You can change the scale using a pinch gesture."
    def helpInZoom : string =
        "Use a finger to scroll.
         Press the hammer button at the top to build rails.
         Press again to come back to the scroll mode."
    def helpSporadicDamage : string =
        "Sometimes rails can be broken."
    def helpDamage : string =
        "Call the service train using one of the buttons to fix the damage.
         It is better to call the train from the closest city to the damage."
    def helpCrazy : string =
        "The engineer of the train is crazy.
         He doesn't pay attention to lights or closed switches.
         Send this train to any city."

    def helpRepairer : string =
        "Conduct the service train through the damage
         and send it to any city."

    def helpSlowMotion : string =
        "Use the slow motion to help yourself in difficult moments.
         Press the snail button in the top right-hand corner of the screen.
         A small number of uses are restored every day.
         If you want to make the game easier,
         you can buy additional slow motions
         or get them for free sharing the game on Facebook or Twitter.
         But it is possible to manage without."

    def linesAdvice : string =
        "You can connect cities using more than one line.
         Thus two trains coming from the opposite direction
         would not collide with each other."


    def result : string = "Score"
    def best : string = "Your best"
    def top(score : LocalPlayerScore) : string =
        if(score.rank == 1) "The 1-st ever!"
        else if(score.rank == 2) "The 2-nd ever!"
        else if(score.rank == 3) "The 3-rd ever!"
        else {
            val p = score.rank.cast<float> / score.maxRank
            if(p <= 5) "Top 5%"
            else if(p <= 10) "Top 10%"
            else if(p <= 20) "Top 20%"
            else if(p <= 30) "Top 30%"
            else if(p <= 50) "Better than average"
            else "Worse than average"
        }
    def leaderboard : string = "The best results"

    def shareSubject : string = "Raildale is a great game for iOS and Mac"
    def shareText(url : string) : string = "Raildale is an exciting railway building game for iOS and Mac OS X: $url"
    def twitterText(url : string) : string = "$url: @RaildaleGame is an exciting railway building game for iOS and Mac"
}

class RuStrings extends Strings("ru") {
    def level(number : uint) : string = "Уровень $number"
    def railBuilt(cost : int) : string = "-$(format(cost)): Плата за постройку железной дороги"
    def trainArrived(train : Train, cost : int) : string =
        if(train.trainType == TrainType.crazy) "+$(format(cost)): Доход от прибытия сумасшедшего поезда"
        else "+$(format(cost)): Доход от прибытия поезда в $(train.color.localName) город"
    def trainDestroyed(cost : int) : string = "-$(format(cost)): Штраф за уничтожение поезда"
    def trainDelayedFine(train : Train, cost : int) : string =
        if(train.trainType == TrainType.crazy) "-$(format(cost)): Штраф за задерживающийся сумасшедший поезд"
        else "-$(format(cost)): Штраф за задерживающийся $(train.color.localName) поезд"
    def damageFixedPayment(cost : int) : string = "-$(format(cost)): Плата за ремонт железной дороги"
    def resumeGame : string = "Продолжить игру"
    def restart(level : Level) : string = "Начать заново уровень $(level.number)"
    def replay(level : Level) : string = "Переиграть уровень $(level.number)"
    def goToNext(level : Level) : string = "Перейти к уровеню $(level.number + 1)"
    def chooseLevel : string = "Выбрать уровень"
    def victory : string = "Победа!"
    def defeat : string = "Вы проиграли!"
    def moneyOver : string = "Закончились деньги"
    def cityBuilt : string = "Построен новый город"
    def tapToContinue : string = if(egPlatform.isComputer) "Кликните для продолжения" else "Нажмите для продолжения"
    def error : string = "Ошибка"
    def buyButton : string = "Купить замедления"

    def colorOrange : string = "оранжевый"
    def colorGreen : string = "зеленый"
    def colorPink : string = "розовый"
    def colorPurple : string = "cиреневый"
    def colorGrey : string = "серый"
    def colorBlue : string = "синий"
    def colorMint : string = "мятный"
    def colorRed : string = "красный"
    def colorBeige : string = "бежевый"
    def colorYellow : string = "желтый"

    def helpConnectTwoCities : string =
        "Соедините два города рельсами.
        $if(egPlatform.touch)
         Для этого просто проведите пальцем по экрану.
        $else
         Используйте мышку или
         проведите двумя пальцами по тачпаду.
        $endif"
    def helpNewCity : string =
        "Иногда появляются новые города.
         Подсоединяйте их к своей железной дороге."
    def helpTrain(to : string) : string =
        "Этот поезд направляется в $to город.
         Вы можете понять это по цвету поезда."
    def helpTrainWithSwitches(to : string) : string =
        "Переключите железнодорожные стрелки$if(egPlatform.touch) касанием$else кликом$endif,
         чтобы этот поезд попал в $to город."
    def helpExpressTrain : string =
        "Это очень быстрый экспресс.
         Он не успеет остановиться перед стрелкой.
         Если заблокировать его стрелкой, то он уничтожится.
         Но можно использовать светофоры."

    def helpToMakeZoom : string =
        "Вы можете изменять масштаб с помощью жеста.
         Для прокрутки используйте два пальца.
         Для строительства рельсов один."
    def helpInZoom : string =
        "Прокручивайте одним пальцем.
         Чтобы построить рельсы нажмите кнопку с молотком вверху.
         Нажмите ее еще раз чтобы вернуться в режим прокрутки."
    def helpRules : string =
        "Не позволяйте балансу опускаться ниже нуля.
         Продержитесь с положительным балансом отведенное время
         и выйграйте уровень."
    def helpSporadicDamage : string =
        "Иногда рельсы могут ломаться сами по себе."
    def helpDamage : string =
        "Вызовите специальный поезд с помощью кнопки, чтобы починить рельсы.
         Лучше вызвать из города, который находиться ближе к повреждению."
    def helpRepairer : string =
        "Проведите ремонтный поезд через повреждение
         и отправьте его в любой город."
    def helpCrazy : string =
        "Машинист этого поезда сошел с ума.
         Он не обращает внимания на светофоры или закрытые стрелки.
         Отправьте этот поезд в любой город."
    def linesAdvice : string =
        "Вы можете соединять города несколькими линиями.
         В таком случае встречные поезда смогут разъехаться."
    def helpSlowMotion : string =
        "Используйте замедленное время, чтобы помочь себе в трудных ситуациях.
         Нажмите кнопку с изображением улитки в правом нижнем углу экрана.
         Количество использование восстанавливается каждый день.
         Если вы хотите упростить игру,
         вы можете купить дополнительные использования
         или получить их бесплатно поделившись с друзьями
         через Facebook или Twitter."

    def shareButton : string = "Поделиться с друзьями"
    def supportButton : string = "Написать разработчику"
    def supportEmailText : string =
        "Сообщите о проблеме или напишите ваши идеи.
         Я обязательно вам отвечу и постараюсь исправить возникшие проблемы как можно скорее.
         Спасибо большое, Антон Жердев, разработчик"
    def rateText : string =
        "Если вам понравилась игра Raildale, не будете ли вы возражать
         против того, чтобы уделить время и оценить ее?

         Если вы столкнулись с проблемой, сообщите мне об этом.
         Я постараюсь исправить ее как можно скорее.

         Спасибо вам за поддержку!
         С наилучшими пожеланиями, Антон Жердев, разработчик"
    def rateNow : string = "Оценить сейчас"
    def rateProblem : string = "Сообщить о проблеме"
    def rateLater : string = "Напомнить позже"
    def rateClose : string = "Нет, спасибо"

    def result : string = "Счет"
    def best : string = "Ваш лучший"
    def top(score : LocalPlayerScore) : string =
        if(score.rank == 1) "1-й!"
        else if(score.rank == 2) "2-й!"
        else if(score.rank == 3) "3-й!"
        else {
            val p = score.rank.cast<float> / score.maxRank
            if(p <= 5) "Лучшие 5%"
            else if(p <= 10) "Лучшие 10%"
            else if(p <= 20) "Лучшие 20%"
            else if(p <= 30) "Лучшие 30%"
            else if(p <= 50) "Выше среднего"
            else "Ниже среднего"
        }
    def leaderboard : string = "Лучшие результаты"

    def shareSubject : string = "Raildale - отличная игра для iOS и Mac"
    def shareText(url : string) : string = "Raildale - великолепная игра о строительстве железной дороги для iOS и Mac OS X: $url"
    def twitterText(url : string) : string = "$url: @RaildaleGame - великолепная игра о железной дороге для iOS и Mac"
}

class JpStrings extends Strings("ja") {
    def level(number : uint) : string = "レベル$number"
    def railBuilt(cost : int) : string = "-$(format(cost)): 鉄道建設の支払い"
    def trainArrived(train : Train, cost : int) : string = "+$(format(cost)): に対する到着列車報酬"
    def trainDestroyed(cost : int) : string = "-$(format(cost)): 列車破壊に対する罰金"
    def trainDelayedFine(train : Train, cost : int) : string = "-$(format(cost)): 列車遅延に対する罰金"
    def damageFixedPayment(cost : int) : string = "-$(format(cost)): 鉄道修理の支払い"
    def resumeGame : string = "ゲームを続ける"
    def restart(level : Level) : string = "レベル$(level.number)をやり直す"
    def replay(level : Level) : string = "レベル$(level.number)をもう一度プレイ"
    def goToNext(level : Level) : string = "次のレベルをプレイ"
    def chooseLevel : string = "レベルを選んでください"
    def victory : string = "勝利!"
    def defeat : string = "敗北!"
    def moneyOver : string = "資金切れです"
    def cityBuilt : string = "新しい都市ができました"
    def tapToContinue : string = if(egPlatform.isComputer) "クリックして続行" else "タップして続行"
    def error : string = "エラー"
    def buyButton : string = "スローモーションを購入"

    def shareButton : string = "友達と共有"
    def supportButton : string = "開発者にメール"

    def rateText : string =
        "Raildaleをお楽しみいただけていれば、
         評価を残していただけませんか？1分以内に評価できます。

         問題があれば、ご報告ください。
         できるだけ早く修正できるよう努めます。

         サポートをありがとうございます！
         開発者Anton Zherdevより"
    def rateNow : string = "今すぐ評価"
    def rateProblem : string = "問題を報告"
    def rateLater : string = "後で表示"
    def rateClose : string = "後で表示"

    def helpConnectTwoCities : string =
       "2つの都市を線路で結びましょう。
       $if(egPlatform.touch)
        指を使って簡単にレールを敷きます。
       $else
        マウスを使うかタッチパッドで2本の指を使います。
       $endif"
    def helpRules : string =
       "残額を赤字にしないようにしましょう。
        規定時間黒字を保てればレベルクリアです。"
    def helpNewCity : string =
       "時々新しい都市が登場します。
        自分の鉄道とつなげましょう。"
    def helpTrain(to : string) : string =
        "列車の方向は色でわかります。"
    def helpTrainWithSwitches(to : string) : string =
        if(egPlatform.touch) "鉄道スイッチをタップで切り替えて、列車を目的地に到着させましょう。"
        else "鉄道スイッチをクリック切り替えて、列車を目的地に到着させましょう。"
    def helpExpressTrain : string =
       "これはとても速い急行列車です。
        スイッチの前で止まる時間がありません。
        この場合列車は破壊されます。
        でも信号機を使って列車を制御できます。"
    def helpToMakeZoom : string =
        "つまみジェスチャーで拡大・縮小できます。"
    def helpInZoom : string =
         "指でスクロールします。
          画面上部のハンマーボタンでレールを敷きます。
          もう一度押すとスクロールモードに戻ります。"
    def helpSporadicDamage : string =
        "時々線路が壊れてしまいます。"
    def helpDamage : string =
        "ボタンのひとつを使って整備列車を呼んで破損部分を修理しましょう。
         最寄りの都市から列車を呼ぶほうが賢明です。"
    def helpCrazy : string =
        "列車の運転手がおかしいです。
         信号や閉鎖スイッチを無視しています。
         この列車をどこかの都市に送ってください。"

    def helpRepairer : string =
        "破損部分に整備列車を走らせ、どこかの都市に送ってください。"

    def helpSlowMotion : string =
       "スローモーションを使って難しい瞬間を切り抜けましょう。
        画面右上角のカタツムリのボタンを押してください。
        使用回数は毎日少しずつ回復します。
        ゲームを簡単にしたい場合は追加スローモーションを購入するか、
        このゲームをFacebookやTwitterで共有して手に入れられます。
        でもそうしなくてもクリアはできます。"

    def linesAdvice : string =
        "複数路線で都市をつなげることもできます。
         そうすれば反対方向の電車が衝突することがありません。"


    def result : string = "スコア"
    def best : string = "あなたの最高の"
    def top(score : LocalPlayerScore) : string =
    if(score.rank == 1) "第1位！"
    else if(score.rank == 2) "第2位！"
    else if(score.rank == 3) "第3位！"
    else {
        val p = score.rank.cast<float> / score.maxRank
        if(p <= 5) "トップ5%"
        else if(p <= 10) "トップ10%"
        else if(p <= 20) "トップ20%"
        else if(p <= 30) "トップ30%"
        else if(p <= 50) "平均以上"
        else "平均以下"
    }
    def leaderboard : string = "最高結果"

    def shareSubject : string = "RaildaleはiOSやMacに最適のゲームです"
    def shareText(url : string) : string = "iOSやMac OS X用のRaildaleは興奮の鉄道建築ゲームです: $url"
    def twitterText(url : string) : string = "$url: iOSやMac OS X用の @RaildaleGame は興奮の鉄道建築ゲームです"
}


class KoStrings extends Strings("ko") {
    def level(number : uint) : string = "레벨 $number"
    def railBuilt(cost : int) : string = "-$(format(cost)): 철도 건물에 대한 지불"
    def trainArrived(train : Train, cost : int) : string = "+$(format(cost)): 도착한 기차에 대한 보상"
    def trainDestroyed(cost : int) : string = "-$(format(cost)): 파괴된 열차에 대한 벌금"
    def trainDelayedFine(train : Train, cost : int) : string = "-$(format(cost)): 지연된 열차에 대한 벌금"
    def damageFixedPayment(cost : int) : string = "-$(format(cost)): 철도 수리 지불"
    def resumeGame : string = "게임 계속"
    def restart(level : Level) : string = "레벨 $(level.number) 다시 시작"
    def replay(level : Level) : string = "다시 레벨 $(level.number) 플레이"
    def goToNext(level : Level) : string = "다음 레벨 플레이"
    def chooseLevel : string = "레벨 선택"
    def victory : string = "승리!"
    def defeat : string = "패배"
    def moneyOver : string = "돈이 없음"
    def cityBuilt : string = "새로운 도시가 건설됨"
    def tapToContinue : string = if(egPlatform.isComputer) "클릭하여 계속" else "눌러서 계속"
    def error : string = "오류"
    def buyButton : string = "슬로우 모션 구매"

    def shareButton : string = "친구와 공유"
    def supportButton : string = "개발자에게 이메일 전송"
    def rateText : string =
       "Raildale 플레이를 즐겨 하는 경우, 잠시 시간을 내주시어 평가해 주시겠습니까?
        몇 분 걸리지 않습니다.

        문제에 직면한 경우, 우리에게 알려 주십시오.
        가능한 한 빨리 문제를 해결하기 위해 노력할 것입니다.


        지원해 주셔서 감사합니다!
        안부를 전하며, Anton Zherdev, 개발자"
    def rateNow : string = "지금 평가하기"
    def rateProblem : string = "문제 보고"
    def rateLater : string = "나중에 다시 알림"
    def rateClose : string = "아니요, 감사합니다"

    def helpConnectTwoCities : string =
        "철도로 두 도시를 연결합니다.
        $if(egPlatform.touch)
         단순히 당신의 손가락을 사용하여 선로를 그립니다.
        $else
         마우스를 사용하여 터치 패드에서 두 손가락을 움직입니다.
        $endif"
    def helpRules : string =
       "계정 잔액이 0보다 낮게 떨어지지 않도록 합니다.
        레벨을 이기려면 주어진 시간에 긍정적인 밸런스를 유지합니다."
    def helpNewCity : string =
        "때때로 새로운 도시가 나타납니다.
         당신의 선로로 이를 연결합니다."
    def helpTrain(to : string) : string =
        "당신은 색상에 의해 열차의 방향을 인식할 수 있습니다."
    def helpTrainWithSwitches(to : string) : string =
        "탭/클릭을 사용하여 철도의 스위치를 켤 수 있으므로, 기차가 목적지에 도착할 수 있습니다."
    def helpExpressTrain : string =
       "이는 매우 빠른 급행열차 입니다.
        스위치 앞에 멈출 시간이 없습니다.
        이 경우 열차는 파괴될 것입니다.
        하지만 당신은 기차를 안내하기 위해 조명을 사용할 수 있습니다."
    def helpToMakeZoom : string =
        "당신은 핀치 제스처를 사용하여 스케일을 변경할 수 있습니다."
    def helpInZoom : string =
       "스크롤하려면 손가락을 사용합니다.
        선로를 구축하기 위하여 상단에 망치 버튼을 누릅니다.
        다시 누르면 스크롤 모드로 돌아올 수 있습니다."
    def helpSporadicDamage : string =
        "가끔 선로가 고장날 수 있습니다."
    def helpDamage : string =
       "손상을 복구하려면 버튼 중 하나를 사용하여 서비스 기차를 호출합니다.
        손상된 곳에서 가장 가까운 도시에서의 기차를 호출하는 것이 좋습니다."
    def helpCrazy : string =
        "열차의 엔지니어는 미쳤습니다.
         그는 조명 또는 폐쇄 스위치에 관심갖지 않았습니다.
         이 열차를 다른 도시로 보냅니다."

    def helpRepairer : string =
        "손상으로 인해 서비스 기차를 운전하고 다른 도시로 이를 보냅니다."

    def helpSlowMotion : string =
        "어려운 순간에 자신을 돕기 위해 슬로우 모션을 사용합니다.
         화면의 오른쪽 상단 모서리에 있는 달팽이 버튼을 누릅니다.
         작은 숫자의 사용은 매일 복원됩니다.
         당신이 게임을 쉽게 하려면, 슬로우 모션을 추가 구매하거나
         Facebook 또는 Twitter에서 무료로 게임을 공유할 수 있습니다.
         하지만 없이 관리할 수 있습니다."

    def linesAdvice : string =
        "한 라인 이상을 사용하여 도시 간을 연결할 수 있습니다.
         따라서, 반대 방향에서 오는 두 열차는 서로 충돌하지 않을 것입니다."


    def result : string = "점수"
    def best : string = "당신의 최고"
    def top(score : LocalPlayerScore) : string =
    if(score.rank == 1) "1위!"
    else if(score.rank == 2) "1위!"
    else if(score.rank == 3) "1위!"
    else {
        val p = score.rank.cast<float> / score.maxRank
        if(p <= 5) "상위 5%"
        else if(p <= 10) "상위 10%"
        else if(p <= 20) "상위 20%"
        else if(p <= 30) "상위 30%"
        else if(p <= 50) "평균 이상"
        else "평균 이하"
    }
    def leaderboard : string = "최고 결과"

    def shareSubject : string = "Raildale은 iOS 및 Mac용 훌륭한 게임입니다."
    def shareText(url : string) : string = "Raildale은 iOS 및 Mac OS X용 흥미로운 선로 구축 게임입니다: $url"
    def twitterText(url : string) : string = "$url: @RaildaleGame은 iOS 및 Mac OS X용 흥미로운 선로 구축 게임입니다."
}


