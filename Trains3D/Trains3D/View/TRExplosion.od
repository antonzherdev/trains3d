import EGTypes
import EGVec

import EGBillboard
import EG


class TRExplosion(position : EGVec3, size : float4) extends EGController {
    val flame = TRExplosionFlame(position, size).init
    def updateWith(delta : float) {
        flame.updateWith(delta)
    }

    def isFinished = !flame.hasParticles
    def restart {
        flame.init
    }
}

class TRExplosionFlame(position : EGVec3, size : float4) extends EGBillboardParticleSystem {
    def generateParticle : EGBillboardParticle = TRExplosionFlameParticle(position, size)

    def init : TRExplosionFlame = {
        4.range.for(emitParticle)
        self
    }
}

class TRExplosionFlameParticle(size : float4) extends EGBillboardParticle(4) {
    static val textureQuadrant : EGQuadrant = EGQuad.identity.mul(0.5).quadrant
    static def apply(position : EGVec3, size : float4) : TRExplosionFlameParticle = {
        val ret = TRExplosionFlameParticle(size)
        ret.position = position
        ret.color = EGVec4(1, 0.7, 0, 0.5)
        ret.uv = textureQuadrant.randomQuad
        ret.model = EGQuad(0)
        ret
    }

    def update(t : float4, dt : float4) {
        if(t < 1) {
            model = EGQuad(size * t)
        }
    }
}

class TRExplosionView {
    val material = EGSimpleMaterial(EG.textureFor("Explosion.png"))
    val view = EGBillboardParticleSystemView(material, EGBlendFunction.premultiplied)

    def draw(explosion : TRExplosion) {
        view.draw(explosion.flame)
    }
}