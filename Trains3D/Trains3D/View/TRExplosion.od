import EGTypes
import EGVec

import EGBillboard


class TRExplosion(position : EGVec3, size : float4) extends EGController {
    private val flame = TRExplosionFlame(position, size).init
    def updateWith(delta : float) {
        flame.updateWith(delta)
    }
}

class TRExplosionFlame(position : EGVec3, size : float4) extends EGBillboardParticleSystem {
    val particles : [TRExplosionFlameParticle] = 4.range.chain.map {_ -> generateParticle}.toArray
    private static val uvs : [EGVec2] = [EGVec2(0, 0), EGVec2(0.25, 0), EGVec2(0, 0.25), EGVec2(0.25, 0.25)]
    def generateParticle : EGBillboardParticle = TRExplosionFlameParticle(position, size)

    def init : TRExplosionFlame = {
        5.range.for(emitParticle)
        self
    }
}

class TRExplosionFlameParticle extends EGBillboardParticle {
    static def apply(position : EGVec3, size : float4) : TRExplosionFlameParticle = {
        val ret = TRExplosionFlameParticle()
        ret.position = position
        ret.color = EGVec4(1, 0.5, 0, 0.7)
        self
    }
}