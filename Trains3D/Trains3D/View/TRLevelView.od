import EGTypes
import EGCameraIso
import EG
import EGGL
import EGMapIso

import TRLevel
import TRLevelBackgroundView
import TRCityView
import TRRailroadView
import TRTrainView

class TRLevelView(level : TRLevel) extends EGView {
    private val backgroundView = TRLevelBackgroundView(level.map)
    private val cityView = TRCityView()
    private val railroadView = TRRailroadView()
    private val trainView = TRTrainView()

    val environment = EGEnvironment(ambientColor = EGColor(0.4, 0.4, 0.4, 1), lights = [EGDirectLight(EGColor(1, 1, 1, 1), EGVec3(-0.2, 0.2, -0.5))])

    def drawView {
        backgroundView.draw
        level.cities.for(city -> cityView.draw(city))
        railroadView.draw(level.railroad)

        trainView.draw(trains = level.trains)
//        egColor3(1.0, 1.0, 1.0)
//        level.map.drawLayout
    }

    val camera : EGCamera = EGCameraIso(level.map.size, EGPoint(0, 0))

    def updateWith(delta : float) {
        level.trains.for(trainView.updateWith(delta, _))
    }
}