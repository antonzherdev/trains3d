package com.antonzherdev.trains

import com.antonzherdev.eg._
import core.math._
import com.antonzherdev.eg.Progress._


class Explosion(position : vec3, size : float4) extends Controller {
    val flame = ExplosionFlame(position, size)
    def updateWith(delta : float) {
        flame.updateWith(delta)
    }

    def isFinished = !flame.hasParticles
    def restart {
        flame.init
    }
}

class ExplosionFlame(position : vec3, size : float4) extends BillboardParticleSystem {
    def generateParticle : BillboardParticle = ExplosionFlameParticle(position, size)

    def init {
        4.range.for(emitParticle)
    }
}

class ExplosionFlameParticle(size : float4, startShift : vec2, shift : vec2) extends BillboardParticle(2) {
    static val startColor = vec4(1, 0.4, 0, 0.3)
    static val textureQuadrant : Quadrant = Quad.identity.mul(0.5).quadrant
    static def apply(position : vec3, size : float4) : ExplosionFlameParticle = {
        val startShift = randomVec2.mul(size*0.2)
        val ret = ExplosionFlameParticle(size, startShift, shift = startShift.add(randomVec2.mul(size*0.2)))
        ret.position = position
        ret.color = startColor
        ret.uv = textureQuadrant.randomQuad
        ret.model = Quad(0)
        ret
    }

    /*val animation = {
        val bigQuad = Quad(size)
        compile([
            gap(0, 0.1) >> progress(0, size) >> model = Quad(_),
            gap(0.1, 1) >> progress(Vec2(0, 0), shift) >> model = bigQuad.add(_)
        ])
    } */

//    val animation = gap(0, 0.1) >> progress(0, size) >> model = Quad(_)
    val animation =
    {
        val bigQuad = Quad(size)
            gap(0, 0.1) >> progress(f4 = 0, size) >> model = Quad(_).add(startShift)
        *|* gap(0.1, 1) >> progress(vec2 = startShift, shift) >> model = bigQuad.add(_)
        *|* gap(0.05, 1) >> progress(vec4 = startColor, vec4(0, 0, 0, 0)) >> color = _
    }
    def update(t : float4, dt : float4) {
        animation(t)
    }
}

class ExplosionView {
    val material = ColorSource(texture = textureFor("Explosion.png"))
    val view = BillboardParticleSystemView(4, material, BlendFunction.premultiplied)

    def draw(explosion : Explosion) {
        view.draw(explosion.flame)
    }
}