import EGGL
import TRRailroad
import EGModel
import "TR3DRail.h"
import "TR3DRailTurn.h"

class TRRailroadView {
    private val railView = TRRailView

    def draw(railroad : TRRailroad) {
        railroad.rails.for(railView.draw(_))
        railroad.builder.rail.for(railView.draw(_))
    }
}

stub val Rail : string
stub val RailTurn : string

class TRRailView {
    def draw(rail : TRRail) {
        glPushMatrix
        glTranslatef(rail.tile.x, rail.tile.y, 0.001)

        glColor3f(0.2, 0.2, 0.2)

        if(rail.start.x == rail.end.x) {
            glRotatef(90, 1, 0, 0)
            egDrawJasModel(Rail)
        } else if(rail.start.y == rail.end.y) {
            glRotatef(90, 0, 0, 1)
            glRotatef(90, 1, 0, 0)
            egDrawJasModel(Rail)
        } else {
            if(rail.start.x == 0 && rail.start.y == 1) glRotatef(90, 0, 0, 1)
            else if(rail.start.x == -1 && rail.end.y == 1) glRotatef(180, 0, 0, 1)
            else if(rail.start.x == -1 && rail.end.y == -1) glRotatef(270, 0, 0, 1)
            glRotatef(90, 1, 0, 0)
            egDrawJasModel(RailTurn)
        }
        glPopMatrix
    }
}