package com.antonzherdev.trains


import com.antonzherdev.eg._

class CityView(level : Level) {
    val expectedTrainModel = Mesh([
        0, 0, 0, 1, 0, -0.5, 0.001, -0.5,
        1, 0, 0, 1, 0, 0.5, 0.001, -0.5,
        1, 1, 0, 1, 0, 0.5, 0.001, 0.5,
        0, 1, 0, 1, 0, -0.5, 0.001, 0.5
        ], [0, 1, 2,
        2, 3, 0]).vao(StandardMaterial(vec4(1, 1, 1, 1)), shadow = false)
    val cityTexture = textureFor("City.png", GL_LINEAR, GL_LINEAR_MIPMAP_NEAREST)
    val vaoBody = Models.city.vao(StandardMaterial(cityTexture), shadow = true)

    def draw {
        egPushGroupMarker("Cities")
        level.cities.for{ city ->
            matrix(
                _.modify(w = w -> w.translate(city.tile.x, city.tile.y, 0))
                 .modify(m = m -> m.rotate(city.angle.angle, 0, -1, 0))
            ) {
                vaoBody.draw(StandardMaterial(ColorSource(city.color.color, cityTexture)))
                if(!context.renderTarget.is<ShadowRenderTarget>) {
                    city.expectedTrainCounter.for{time ->
                        val x = -time/2
                        expectedTrainModel.draw(StandardMaterial(vec4(1.0, 0.5 - x, 0.5 - x, 1)))
                    }
                }
            }
        }
        egPopGroupMarker
    }
}