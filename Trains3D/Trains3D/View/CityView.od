package com.antonzherdev.trains


import com.antonzherdev.eg._

class CityView {
    val expectedTrainModel = Mesh([
        0, 0, 0, 1, 0, -0.5, 0.001, -0.5,
        1, 0, 0, 1, 0, 0.5, 0.001, -0.5,
        1, 1, 0, 1, 0, 0.5, 0.001, 0.5,
        0, 1, 0, 1, 0, -0.5, 0.001, 0.5
        ], [0, 1, 2,
        2, 3, 0])
    val roofTexture = textureFor("Roof.png")
    val windowMaterial = StandardMaterial(textureFor("Window.png"), vec4(1, 1, 1, 1), 1)
    def draw(city : City) {
        matrix(
            _.modify(w = w -> w.translate(city.tile.x, city.tile.y, 0))
             .modify(m = m -> m.rotate(city.angle.angle, 0, -1, 0))
        ) {
            StandardMaterial(city.color.color).draw(Models.cityBodies)
            glDisable(GL_CULL_FACE)
            val roofMaterial = StandardMaterial(ColorSource(city.color.color, roofTexture), vec4(0.5, 0.5, 0.5, 1), 1)
            roofMaterial.draw(Models.cityRoofs)
            glEnable(GL_CULL_FACE)
            windowMaterial.draw(Models.cityWindows)
            city.expectedTrainCounter.for{time ->
                val x = -time/2
                StandardMaterial(vec4(1.0, 0.5 - x, 0.5 - x, 1)).draw(expectedTrainModel)
            }
        }
    }
}