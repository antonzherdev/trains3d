package com.antonzherdev.trains

import com.antonzherdev.eg._

enum CityColor(color : vec4, localName : string) {
    orange(vec4(1.0, 0.5, 0.0, 1.0), Loc.colorOrange)
    green(vec4(0.66, 0.9, 0.44, 1.0), Loc.colorGreen)
    pink(vec4(0.9, 0.44, 0.66, 1.0), Loc.colorPink)
    purple(vec4(0.66, 0.44, 0.9, 1.0), Loc.colorPurple)
    xx(vec4(0.9, 0.9, 0.44, 1.0), Loc.colorPurple)

    grey(vec4(0.5, 0.5, 0.5 , 1.0), Loc.colorGrey)
}


enum CityAngle(angle : int, form : RailForm, back : bool) {
    angle0(0, RailForm.leftRight, false)
    angle90(90, RailForm.bottomTop, true)
    angle180(180, RailForm.leftRight, true)
    angle270(270, RailForm.bottomTop, false)
}

/*
 * angle - поворот по часовой стрелке. При 0 город направлен по оси x в положительном направлении
 */
class City(color : CityColor, tile : vec2i, angle : CityAngle) extends Controller {
    def startPoint = RailPoint(tile, angle.form, 0, angle.back)

    var expectedTrainCounter = Counter()

    def updateWith(delta : float) {
        expectedTrainCounter.updateWith(delta)
    }

    private var waitingCounter = Counter()
    def waitToRunTrain {
        waitingCounter = expectedTrainCounter
        expectedTrainCounter = Counter()
    }

    def isWaitingToRunTrain = waitingCounter.isRunning

    def resumeTrainRunning {
        expectedTrainCounter = waitingCounter
        waitingCounter = Counter()
    }

    def canRunNewTrain = expectedTrainCounter.isStopped && waitingCounter.isStopped
}