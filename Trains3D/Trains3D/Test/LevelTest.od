package com.antonzherdev.trains

import com.antonzherdev.test._
import com.antonzherdev.test.Assert._


class LevelTest extends TestCase {
    def testSwitchLock {
        repeat(10) {
            val level : Level = LevelFactory.levelWith(mapSize = vec2i(5, 5))
            val railroad : Railroad = level.railroad
            railroad.tryAdd(Rail(vec2i(0, 0), RailForm.leftRight))
            railroad.tryAdd(Rail(vec2i(1, 0), RailForm.leftRight))
            railroad.tryAdd(Rail(vec2i(2, 0), RailForm.leftRight))
            railroad.tryAdd(Rail(vec2i(3, 0), RailForm.leftRight))
            railroad.tryAdd(Rail(vec2i(1, 0), RailForm.leftBottom))

            assertEquals(railroad.switches.count, 1)
            val sw = railroad.switches.head
            assertEquals(sw.rail1.tile, vec2i(1, 0))
            assertEquals(sw.rail1.form, RailForm.leftRight)
            assertTrue(sw.firstActive)

            val train = Train(level, TrainType.simple, CityColor.grey, [CarType.engine], 30).actor
            level.testRun(train, fromPoint = RailPoint(tile = vec2i(1, 0), RailForm.leftRight, x = 0, back = false))
            level.tryTurn(sw)
            Thread.sleep(0.1)
            assertTrue(sw.firstActive)

            train.set(head = RailPoint(tile = vec2i(3, 0), RailForm.leftRight, x = 0, back = false))
            level.tryTurn(sw)
            Thread.sleep(0.1)
            assertFalse(sw.firstActive)
        }
    }
}