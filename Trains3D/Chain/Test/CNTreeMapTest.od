import CNTest
import CNTreeMap

class CNTreeMapTest extends CNTestCase {
    def comp(a : int, b : int) : int =
        if(a < b) 1
        else if(a > b) -1
        else 0

    def testMain {
        val map = CNTreeMap<int, string>((a, b) -> comp(a, b))
        assertEquals(0, map.count)
        assertTrue(map[0].isEmpty)

        map.set(object = "test", forKey = 0)
        assertEquals("test", map[0].get)

        val tests : [int] = [-10, -20, -30, 10, 20, -15, 20, 0, 11, 13, -18]
        tests.for(i -> map.set(object = "test" + i, forKey = i))
        assertEquals(tests.distinct.count, map.count)
        tests.distinct.for(i -> assertEquals("test" + i, map[i].get))
    }
}