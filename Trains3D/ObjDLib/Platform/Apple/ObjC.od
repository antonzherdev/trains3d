package core.objc

stub class NSSet<T> extends ImSet<T> {
    def mCopy : NSMutableSet<T>
}

stub class NSMutableSet<T> extends MSet<T> {
    def im : NSSet<T>
    def imCopy : NSSet<T>
}

typedef ImHashSet<T> = NSSet<T>
typedef MHashSet<T> = NSMutableSet<T>

stub class NSArray<T> extends ImSeq<T> {
    static def apply<T>(mArray : MArray) : [T]
    def mCopy : NSMutableArray<T>

    def add(item : T) : [T]
    def add(seq : Seq<T>) : [T]
    def sub(item : T) : [T]
    def tail : [T]
}
stub class NSMutableArray<T> extends MSeq<T> {
    static def apply<T>(capacity : uint) : NSMutableArray<T>
    def im : [T]
    def imCopy : [T]
}

typedef ImArray<T> = NSArray<T>
typedef MArray<T> = NSMutableArray<T>


stub class NSDictionary <K, V> extends ImMap<K, V> {
    def mCopy : NSMutableDictionary<K, V>
}

stub class NSMutableDictionary<K, V> extends MMap<K, V> {
    def im : NSDictionary<K, V>
    def imCopy : NSDictionary<K, V>
}

typedef ImHashMap<K, V> = NSDictionary<K, V>
typedef MHashMap<K, V> = NSMutableDictionary<K, V>

stub class NSObject {
}

stub object NSGeneric{
    def NSStringFromClass(cls : Class) : string
}
