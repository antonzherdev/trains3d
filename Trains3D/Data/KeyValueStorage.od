package com.antonzherdev.data

stub package object {
    val prefix = "DT"

    import objd.react._
}

stub class KeyValueStorage(defaults : [string : any]) {
    def set(key : string, i : int)
    def keepMax(key : string, i : int)
    def increment(key : string)
    def decrement(key : string)

    def set(key : string, value : any)
    def set(key : string, b : bool)

    def set<T>(key : string, array : [T])
    def appendToArray<T>(key : string, value : T) : [T]

    def stringFor(key : string) : string
    def stringVar(key : string) : Var<string>
    def intFor(key : string) : int
    def intVar(key : string) : Var<int>
    def boolFor(key : string) : bool
    def boolVar(key : string) : Var<int>
    def arrayFor<T>(key : string) : [T]
    def valueFor<T>(key : string) : T
    def varFor<T>(key : string) : Var<T>

    def synchronize
}

stub class LocalKeyValueStorage(defaults : [string : any]) extends KeyValueStorage(defaults)

stub class CloudKeyValueStorage(defaults : [string : any],
    resolveConflict : string -> ((any, any) -> any)) extends KeyValueStorage(defaults)